{"version":3,"sources":["./node_modules/ngx-bootstrap/__ivy_ngcc__/timepicker/fesm2015/ngx-bootstrap-timepicker.js","./src/app/timer-edit/templates/action-alert.html","./src/app/timer-edit/templates/action-device.html","./src/app/timer-edit/templates/action-group.html","./src/app/timer-edit/templates/action-room.html","./src/app/timer-edit/timer-edit.component.html","./src/app/timer-edit/timer-edit.component.css","./src/app/timer-edit/timer-edit.component.ts","./src/app/timer-edit/timer-edit.module.ts"],"names":[],"mappings":"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B;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gEAAgE,uCAAuC;AACvG,0BAA0B,gEAAyB,EAAE,4DAA4D;AACjH;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,wDAAU;AACxB,KAAK,eAAe,EAAE;AACtB,WAAW,EAaV;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA;AACA,WAAW,GAAG;AACd,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,GAAG;AACd,YAAY;AACZ;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,GAAG;AACd,WAAW,GAAG;AACd,WAAW,GAAG;AACd,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA,WAAW,EAAE;AACb,WAAW,GAAG;AACd,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,WAAW,kJAAkJ;AAC7J;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,eAAe,EAAE;AACjB;AACA,WAAW,2DAA2D;AACtE,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,4CAA4C,iBAAiB;AAC7D;AACA;AACA,uBAAuB,EAAE;AACzB,mDAAmD,qBAAqB;AACxE;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,mDAAmD,uBAAuB;AAC1E;AACA;AACA;AACA,uDAAuD,wBAAwB;AAC/E;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,4CAA4C,kBAAkB;AAC9D;AACA;AACA,uBAAuB,EAAE;AACzB,mDAAmD,sBAAsB;AACzE;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,mDAAmD,wBAAwB;AAC3E;AACA;AACA;AACA,uDAAuD,yBAAyB;AAChF;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8DAA8D,sCAAsC;AACpG,yBAAyB,gEAAyB,EAAE,0DAA0D;AAC9G,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,wDAAU;AACxB,KAAK,gBAAgB,WAAW,EAAE,QAAQ,EAAE;AAC5C,WAAW,EAqGV;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA,WAAW,EAOV;AACD,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,WAAW,GAAG;AACd,YAAY;AACZ;AACA;AACA;AACA;AACA,mCAAmC,UAAU,wBAAwB;AACrE;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,sDAAsD,4BAA4B;AAClF;AACA;AACA;AACA,mCAAmC,UAAU,kBAAkB;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,sDAAsD,8BAA8B;AACpF;AACA;AACA;AACA,mCAAmC,UAAU,kBAAkB;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,mCAAmC,UAAU,kBAAkB;AAC/D;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,mCAAmC,UAAU,kBAAkB;AAC/D;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA,8BAA8B,iEAAS;AACvC;AACA,mBAAmB,EAAE;AACrB,gCAAgC,oDAAe;AAC/C;AACA,SAAS;AACT,mBAAmB,EAAE;AACrB,0BAA0B,iEAAS;AACnC;AACA;AACA;AACA,4DAA4D,qCAAqC;AACjG,wBAAwB,gEAAyB,EAAE,wDAAwD;AAC3G;AACA;AACA,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,wDAAU;AACxB,KAAK,gBAAgB,WAAW,EAAE,QAAQ,EAAE;;AAE5C;AACA;AACA,cAAc,uFAAuF;AACrG;AACA,WAAW,EAAE;AACb;AACA,aAAa,gEAAiB;AAC9B;AACA,iBAAiB,gEAAU;AAC3B,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,0DAAY;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA,kEAAkE,eAAe;AACjF;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA,oEAAoE,eAAe;AACnF;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA,oEAAoE,eAAe;AACnF;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,E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","file":"timer-edit-timer-edit-module-es2015.js","sourcesContent":["import { Injectable, forwardRef, EventEmitter, Component, ChangeDetectionStrategy, ViewEncapsulation, ChangeDetectorRef, Input, Output, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { BehaviorSubject } from 'rxjs';\nimport { MiniStore, MiniState } from 'ngx-bootstrap/mini-ngrx';\nimport { CommonModule } from '@angular/common';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\n\nfunction TimepickerComponent_td_6_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"td\");\n    ɵngcc0.ɵɵtext(1, \"\\u00A0\\u00A0\\u00A0\");\n    ɵngcc0.ɵɵelementEnd();\n} }\nfunction TimepickerComponent_td_7_Template(rf, ctx) { if (rf & 1) {\n    const _r19 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"td\");\n    ɵngcc0.ɵɵelementStart(1, \"a\", 1);\n    ɵngcc0.ɵɵlistener(\"click\", function TimepickerComponent_td_7_Template_a_click_1_listener() { ɵngcc0.ɵɵrestoreView(_r19); const ctx_r18 = ɵngcc0.ɵɵnextContext(); return ctx_r18.changeMinutes(ctx_r18.minuteStep); });\n    ɵngcc0.ɵɵelement(2, \"span\", 2);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵclassProp(\"disabled\", !ctx_r1.canIncrementMinutes || !ctx_r1.isEditable);\n} }\nfunction TimepickerComponent_td_8_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"td\");\n    ɵngcc0.ɵɵtext(1, \"\\u00A0\");\n    ɵngcc0.ɵɵelementEnd();\n} }\nfunction TimepickerComponent_td_9_Template(rf, ctx) { if (rf & 1) {\n    const _r21 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"td\");\n    ɵngcc0.ɵɵelementStart(1, \"a\", 1);\n    ɵngcc0.ɵɵlistener(\"click\", function TimepickerComponent_td_9_Template_a_click_1_listener() { ɵngcc0.ɵɵrestoreView(_r21); const ctx_r20 = ɵngcc0.ɵɵnextContext(); return ctx_r20.changeSeconds(ctx_r20.secondsStep); });\n    ɵngcc0.ɵɵelement(2, \"span\", 2);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r3 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵclassProp(\"disabled\", !ctx_r3.canIncrementSeconds || !ctx_r3.isEditable);\n} }\nfunction TimepickerComponent_td_10_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"td\");\n    ɵngcc0.ɵɵtext(1, \"\\u00A0\\u00A0\\u00A0\");\n    ɵngcc0.ɵɵelementEnd();\n} }\nfunction TimepickerComponent_td_11_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"td\");\n} }\nfunction TimepickerComponent_td_15_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"td\");\n    ɵngcc0.ɵɵtext(1, \"\\u00A0:\\u00A0\");\n    ɵngcc0.ɵɵelementEnd();\n} }\nfunction TimepickerComponent_td_16_Template(rf, ctx) { if (rf & 1) {\n    const _r23 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"td\", 4);\n    ɵngcc0.ɵɵelementStart(1, \"input\", 5);\n    ɵngcc0.ɵɵlistener(\"wheel\", function TimepickerComponent_td_16_Template_input_wheel_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r23); const ctx_r22 = ɵngcc0.ɵɵnextContext(); ctx_r22.prevDef($event); return ctx_r22.changeMinutes(ctx_r22.minuteStep * ctx_r22.wheelSign($event), \"wheel\"); })(\"keydown.ArrowUp\", function TimepickerComponent_td_16_Template_input_keydown_ArrowUp_1_listener() { ɵngcc0.ɵɵrestoreView(_r23); const ctx_r24 = ɵngcc0.ɵɵnextContext(); return ctx_r24.changeMinutes(ctx_r24.minuteStep, \"key\"); })(\"keydown.ArrowDown\", function TimepickerComponent_td_16_Template_input_keydown_ArrowDown_1_listener() { ɵngcc0.ɵɵrestoreView(_r23); const ctx_r25 = ɵngcc0.ɵɵnextContext(); return ctx_r25.changeMinutes(-ctx_r25.minuteStep, \"key\"); })(\"change\", function TimepickerComponent_td_16_Template_input_change_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r23); const ctx_r26 = ɵngcc0.ɵɵnextContext(); return ctx_r26.updateMinutes($event.target.value); });\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r7 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"has-error\", ctx_r7.invalidMinutes);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵclassProp(\"is-invalid\", ctx_r7.invalidMinutes);\n    ɵngcc0.ɵɵproperty(\"placeholder\", ctx_r7.minutesPlaceholder)(\"readonly\", ctx_r7.readonlyInput)(\"disabled\", ctx_r7.disabled)(\"value\", ctx_r7.minutes);\n    ɵngcc0.ɵɵattribute(\"aria-label\", ctx_r7.labelMinutes);\n} }\nfunction TimepickerComponent_td_17_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"td\");\n    ɵngcc0.ɵɵtext(1, \"\\u00A0:\\u00A0\");\n    ɵngcc0.ɵɵelementEnd();\n} }\nfunction TimepickerComponent_td_18_Template(rf, ctx) { if (rf & 1) {\n    const _r28 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"td\", 4);\n    ɵngcc0.ɵɵelementStart(1, \"input\", 5);\n    ɵngcc0.ɵɵlistener(\"wheel\", function TimepickerComponent_td_18_Template_input_wheel_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r28); const ctx_r27 = ɵngcc0.ɵɵnextContext(); ctx_r27.prevDef($event); return ctx_r27.changeSeconds(ctx_r27.secondsStep * ctx_r27.wheelSign($event), \"wheel\"); })(\"keydown.ArrowUp\", function TimepickerComponent_td_18_Template_input_keydown_ArrowUp_1_listener() { ɵngcc0.ɵɵrestoreView(_r28); const ctx_r29 = ɵngcc0.ɵɵnextContext(); return ctx_r29.changeSeconds(ctx_r29.secondsStep, \"key\"); })(\"keydown.ArrowDown\", function TimepickerComponent_td_18_Template_input_keydown_ArrowDown_1_listener() { ɵngcc0.ɵɵrestoreView(_r28); const ctx_r30 = ɵngcc0.ɵɵnextContext(); return ctx_r30.changeSeconds(-ctx_r30.secondsStep, \"key\"); })(\"change\", function TimepickerComponent_td_18_Template_input_change_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r28); const ctx_r31 = ɵngcc0.ɵɵnextContext(); return ctx_r31.updateSeconds($event.target.value); });\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r9 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"has-error\", ctx_r9.invalidSeconds);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵclassProp(\"is-invalid\", ctx_r9.invalidSeconds);\n    ɵngcc0.ɵɵproperty(\"placeholder\", ctx_r9.secondsPlaceholder)(\"readonly\", ctx_r9.readonlyInput)(\"disabled\", ctx_r9.disabled)(\"value\", ctx_r9.seconds);\n    ɵngcc0.ɵɵattribute(\"aria-label\", ctx_r9.labelSeconds);\n} }\nfunction TimepickerComponent_td_19_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"td\");\n    ɵngcc0.ɵɵtext(1, \"\\u00A0\\u00A0\\u00A0\");\n    ɵngcc0.ɵɵelementEnd();\n} }\nfunction TimepickerComponent_td_20_Template(rf, ctx) { if (rf & 1) {\n    const _r33 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"td\");\n    ɵngcc0.ɵɵelementStart(1, \"button\", 8);\n    ɵngcc0.ɵɵlistener(\"click\", function TimepickerComponent_td_20_Template_button_click_1_listener() { ɵngcc0.ɵɵrestoreView(_r33); const ctx_r32 = ɵngcc0.ɵɵnextContext(); return ctx_r32.toggleMeridian(); });\n    ɵngcc0.ɵɵtext(2);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r11 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵclassProp(\"disabled\", !ctx_r11.isEditable || !ctx_r11.canToggleMeridian);\n    ɵngcc0.ɵɵproperty(\"disabled\", !ctx_r11.isEditable || !ctx_r11.canToggleMeridian);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\"\", ctx_r11.meridian, \" \");\n} }\nfunction TimepickerComponent_td_25_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"td\");\n    ɵngcc0.ɵɵtext(1, \"\\u00A0\\u00A0\\u00A0\");\n    ɵngcc0.ɵɵelementEnd();\n} }\nfunction TimepickerComponent_td_26_Template(rf, ctx) { if (rf & 1) {\n    const _r35 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"td\");\n    ɵngcc0.ɵɵelementStart(1, \"a\", 1);\n    ɵngcc0.ɵɵlistener(\"click\", function TimepickerComponent_td_26_Template_a_click_1_listener() { ɵngcc0.ɵɵrestoreView(_r35); const ctx_r34 = ɵngcc0.ɵɵnextContext(); return ctx_r34.changeMinutes(-ctx_r34.minuteStep); });\n    ɵngcc0.ɵɵelement(2, \"span\", 7);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r13 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵclassProp(\"disabled\", !ctx_r13.canDecrementMinutes || !ctx_r13.isEditable);\n} }\nfunction TimepickerComponent_td_27_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"td\");\n    ɵngcc0.ɵɵtext(1, \"\\u00A0\");\n    ɵngcc0.ɵɵelementEnd();\n} }\nfunction TimepickerComponent_td_28_Template(rf, ctx) { if (rf & 1) {\n    const _r37 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"td\");\n    ɵngcc0.ɵɵelementStart(1, \"a\", 1);\n    ɵngcc0.ɵɵlistener(\"click\", function TimepickerComponent_td_28_Template_a_click_1_listener() { ɵngcc0.ɵɵrestoreView(_r37); const ctx_r36 = ɵngcc0.ɵɵnextContext(); return ctx_r36.changeSeconds(-ctx_r36.secondsStep); });\n    ɵngcc0.ɵɵelement(2, \"span\", 7);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r15 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵclassProp(\"disabled\", !ctx_r15.canDecrementSeconds || !ctx_r15.isEditable);\n} }\nfunction TimepickerComponent_td_29_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"td\");\n    ɵngcc0.ɵɵtext(1, \"\\u00A0\\u00A0\\u00A0\");\n    ɵngcc0.ɵɵelementEnd();\n} }\nfunction TimepickerComponent_td_30_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"td\");\n} }\nclass TimepickerActions {\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    writeValue(value) {\n        return {\n            type: TimepickerActions.WRITE_VALUE,\n            payload: value\n        };\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    changeHours(event) {\n        return {\n            type: TimepickerActions.CHANGE_HOURS,\n            payload: event\n        };\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    changeMinutes(event) {\n        return {\n            type: TimepickerActions.CHANGE_MINUTES,\n            payload: event\n        };\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    changeSeconds(event) {\n        return {\n            type: TimepickerActions.CHANGE_SECONDS,\n            payload: event\n        };\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    setTime(value) {\n        return {\n            type: TimepickerActions.SET_TIME_UNIT,\n            payload: value\n        };\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    updateControls(value) {\n        return {\n            type: TimepickerActions.UPDATE_CONTROLS,\n            payload: value\n        };\n    }\n}\nTimepickerActions.ɵfac = function TimepickerActions_Factory(t) { return new (t || TimepickerActions)(); };\nTimepickerActions.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: TimepickerActions, factory: TimepickerActions.ɵfac });\nTimepickerActions.WRITE_VALUE = '[timepicker] write value from ng model';\nTimepickerActions.CHANGE_HOURS = '[timepicker] change hours';\nTimepickerActions.CHANGE_MINUTES = '[timepicker] change minutes';\nTimepickerActions.CHANGE_SECONDS = '[timepicker] change seconds';\nTimepickerActions.SET_TIME_UNIT = '[timepicker] set time unit';\nTimepickerActions.UPDATE_CONTROLS = '[timepicker] update controls';\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(TimepickerActions, [{\n        type: Injectable\n    }], null, null); })();\nif (false) {\n    /** @type {?} */\n    TimepickerActions.WRITE_VALUE;\n    /** @type {?} */\n    TimepickerActions.CHANGE_HOURS;\n    /** @type {?} */\n    TimepickerActions.CHANGE_MINUTES;\n    /** @type {?} */\n    TimepickerActions.CHANGE_SECONDS;\n    /** @type {?} */\n    TimepickerActions.SET_TIME_UNIT;\n    /** @type {?} */\n    TimepickerActions.UPDATE_CONTROLS;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst dex = 10;\n/** @type {?} */\nconst hoursPerDay = 24;\n/** @type {?} */\nconst hoursPerDayHalf = 12;\n/** @type {?} */\nconst minutesPerHour = 60;\n/** @type {?} */\nconst secondsPerMinute = 60;\n/**\n * @param {?=} value\n * @return {?}\n */\nfunction isValidDate(value) {\n    if (!value) {\n        return false;\n    }\n    if (value instanceof Date && isNaN(value.getHours())) {\n        return false;\n    }\n    if (typeof value === 'string') {\n        return isValidDate(new Date(value));\n    }\n    return true;\n}\n/**\n * @param {?} controls\n * @param {?} newDate\n * @return {?}\n */\nfunction isValidLimit(controls, newDate) {\n    if (controls.min && newDate < controls.min) {\n        return false;\n    }\n    if (controls.max && newDate > controls.max) {\n        return false;\n    }\n    return true;\n}\n/**\n * @param {?} value\n * @return {?}\n */\nfunction toNumber(value) {\n    if (typeof value === 'number') {\n        return value;\n    }\n    return parseInt(value, dex);\n}\n/**\n * @param {?} value\n * @return {?}\n */\nfunction isNumber(value) {\n    return !isNaN(toNumber(value));\n}\n/**\n * @param {?} value\n * @param {?=} isPM\n * @return {?}\n */\nfunction parseHours(value, isPM = false) {\n    /** @type {?} */\n    const hour = toNumber(value);\n    if (isNaN(hour) ||\n        hour < 0 ||\n        hour > (isPM ? hoursPerDayHalf : hoursPerDay)) {\n        return NaN;\n    }\n    return hour;\n}\n/**\n * @param {?} value\n * @return {?}\n */\nfunction parseMinutes(value) {\n    /** @type {?} */\n    const minute = toNumber(value);\n    if (isNaN(minute) || minute < 0 || minute > minutesPerHour) {\n        return NaN;\n    }\n    return minute;\n}\n/**\n * @param {?} value\n * @return {?}\n */\nfunction parseSeconds(value) {\n    /** @type {?} */\n    const seconds = toNumber(value);\n    if (isNaN(seconds) || seconds < 0 || seconds > secondsPerMinute) {\n        return NaN;\n    }\n    return seconds;\n}\n/**\n * @param {?} value\n * @return {?}\n */\nfunction parseTime(value) {\n    if (typeof value === 'string') {\n        return new Date(value);\n    }\n    return value;\n}\n/**\n * @param {?} value\n * @param {?} diff\n * @return {?}\n */\nfunction changeTime(value, diff) {\n    if (!value) {\n        return changeTime(createDate(new Date(), 0, 0, 0), diff);\n    }\n    /** @type {?} */\n    let hour = value.getHours();\n    /** @type {?} */\n    let minutes = value.getMinutes();\n    /** @type {?} */\n    let seconds = value.getSeconds();\n    if (diff.hour) {\n        hour = hour + toNumber(diff.hour);\n    }\n    if (diff.minute) {\n        minutes = minutes + toNumber(diff.minute);\n    }\n    if (diff.seconds) {\n        seconds = seconds + toNumber(diff.seconds);\n    }\n    return createDate(value, hour, minutes, seconds);\n}\n/**\n * @param {?} value\n * @param {?} opts\n * @return {?}\n */\nfunction setTime(value, opts) {\n    /** @type {?} */\n    let hour = parseHours(opts.hour);\n    /** @type {?} */\n    const minute = parseMinutes(opts.minute);\n    /** @type {?} */\n    const seconds = parseSeconds(opts.seconds) || 0;\n    if (opts.isPM && hour !== 12) {\n        hour += hoursPerDayHalf;\n    }\n    if (!value) {\n        if (!isNaN(hour) && !isNaN(minute)) {\n            return createDate(new Date(), hour, minute, seconds);\n        }\n        return value;\n    }\n    if (isNaN(hour) || isNaN(minute)) {\n        return value;\n    }\n    return createDate(value, hour, minute, seconds);\n}\n/**\n * @param {?} value\n * @param {?} hours\n * @param {?} minutes\n * @param {?} seconds\n * @return {?}\n */\nfunction createDate(value, hours, minutes, seconds) {\n    /** @type {?} */\n    const newValue = new Date(value.getFullYear(), value.getMonth(), value.getDate(), hours, minutes, seconds, value.getMilliseconds());\n    // #3139 ensure date part remains unchanged\n    newValue.setFullYear(value.getFullYear());\n    newValue.setMonth(value.getMonth());\n    newValue.setDate(value.getDate());\n    return newValue;\n}\n/**\n * @param {?} value\n * @return {?}\n */\nfunction padNumber(value) {\n    /** @type {?} */\n    const _value = value.toString();\n    if (_value.length > 1) {\n        return _value;\n    }\n    return `0${_value}`;\n}\n/**\n * @param {?} hours\n * @param {?} isPM\n * @return {?}\n */\nfunction isHourInputValid(hours, isPM) {\n    return !isNaN(parseHours(hours, isPM));\n}\n/**\n * @param {?} minutes\n * @return {?}\n */\nfunction isMinuteInputValid(minutes) {\n    return !isNaN(parseMinutes(minutes));\n}\n/**\n * @param {?} seconds\n * @return {?}\n */\nfunction isSecondInputValid(seconds) {\n    return !isNaN(parseSeconds(seconds));\n}\n/**\n * @param {?} diff\n * @param {?} max\n * @param {?} min\n * @return {?}\n */\nfunction isInputLimitValid(diff, max, min) {\n    /** @type {?} */\n    const newDate = setTime(new Date(), diff);\n    if (max && newDate > max) {\n        return false;\n    }\n    if (min && newDate < min) {\n        return false;\n    }\n    return true;\n}\n/**\n * @param {?} hours\n * @param {?=} minutes\n * @param {?=} seconds\n * @param {?=} isPM\n * @return {?}\n */\nfunction isInputValid(hours, minutes = '0', seconds = '0', isPM) {\n    return isHourInputValid(hours, isPM)\n        && isMinuteInputValid(minutes)\n        && isSecondInputValid(seconds);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @param {?} state\n * @param {?=} event\n * @return {?}\n */\nfunction canChangeValue(state, event) {\n    if (state.readonlyInput || state.disabled) {\n        return false;\n    }\n    if (event) {\n        if (event.source === 'wheel' && !state.mousewheel) {\n            return false;\n        }\n        if (event.source === 'key' && !state.arrowkeys) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * @param {?} event\n * @param {?} controls\n * @return {?}\n */\nfunction canChangeHours(event, controls) {\n    if (!event.step) {\n        return false;\n    }\n    if (event.step > 0 && !controls.canIncrementHours) {\n        return false;\n    }\n    if (event.step < 0 && !controls.canDecrementHours) {\n        return false;\n    }\n    return true;\n}\n/**\n * @param {?} event\n * @param {?} controls\n * @return {?}\n */\nfunction canChangeMinutes(event, controls) {\n    if (!event.step) {\n        return false;\n    }\n    if (event.step > 0 && !controls.canIncrementMinutes) {\n        return false;\n    }\n    if (event.step < 0 && !controls.canDecrementMinutes) {\n        return false;\n    }\n    return true;\n}\n/**\n * @param {?} event\n * @param {?} controls\n * @return {?}\n */\nfunction canChangeSeconds(event, controls) {\n    if (!event.step) {\n        return false;\n    }\n    if (event.step > 0 && !controls.canIncrementSeconds) {\n        return false;\n    }\n    if (event.step < 0 && !controls.canDecrementSeconds) {\n        return false;\n    }\n    return true;\n}\n/**\n * @param {?} state\n * @return {?}\n */\nfunction getControlsValue(state) {\n    const { hourStep, minuteStep, secondsStep, readonlyInput, disabled, mousewheel, arrowkeys, showSpinners, showMeridian, showSeconds, meridians, min, max } = state;\n    return {\n        hourStep,\n        minuteStep,\n        secondsStep,\n        readonlyInput,\n        disabled,\n        mousewheel,\n        arrowkeys,\n        showSpinners,\n        showMeridian,\n        showSeconds,\n        meridians,\n        min,\n        max\n    };\n}\n/**\n * @param {?} value\n * @param {?} state\n * @return {?}\n */\nfunction timepickerControls(value, state) {\n    /** @type {?} */\n    const hoursPerDayHalf = 12;\n    const { min, max, hourStep, minuteStep, secondsStep, showSeconds } = state;\n    /** @type {?} */\n    const res = {\n        canIncrementHours: true,\n        canIncrementMinutes: true,\n        canIncrementSeconds: true,\n        canDecrementHours: true,\n        canDecrementMinutes: true,\n        canDecrementSeconds: true,\n        canToggleMeridian: true\n    };\n    if (!value) {\n        return res;\n    }\n    // compare dates\n    if (max) {\n        /** @type {?} */\n        const _newHour = changeTime(value, { hour: hourStep });\n        res.canIncrementHours = max > _newHour;\n        if (!res.canIncrementHours) {\n            /** @type {?} */\n            const _newMinutes = changeTime(value, { minute: minuteStep });\n            res.canIncrementMinutes = showSeconds\n                ? max > _newMinutes\n                : max >= _newMinutes;\n        }\n        if (!res.canIncrementMinutes) {\n            /** @type {?} */\n            const _newSeconds = changeTime(value, { seconds: secondsStep });\n            res.canIncrementSeconds = max >= _newSeconds;\n        }\n        if (value.getHours() < hoursPerDayHalf) {\n            res.canToggleMeridian = changeTime(value, { hour: hoursPerDayHalf }) < max;\n        }\n    }\n    if (min) {\n        /** @type {?} */\n        const _newHour = changeTime(value, { hour: -hourStep });\n        res.canDecrementHours = min < _newHour;\n        if (!res.canDecrementHours) {\n            /** @type {?} */\n            const _newMinutes = changeTime(value, { minute: -minuteStep });\n            res.canDecrementMinutes = showSeconds\n                ? min < _newMinutes\n                : min <= _newMinutes;\n        }\n        if (!res.canDecrementMinutes) {\n            /** @type {?} */\n            const _newSeconds = changeTime(value, { seconds: -secondsStep });\n            res.canDecrementSeconds = min <= _newSeconds;\n        }\n        if (value.getHours() >= hoursPerDayHalf) {\n            res.canToggleMeridian = changeTime(value, { hour: -hoursPerDayHalf }) > min;\n        }\n    }\n    return res;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Provides default configuration values for timepicker\n */\nclass TimepickerConfig {\n    constructor() {\n        /**\n         * hours change step\n         */\n        this.hourStep = 1;\n        /**\n         * hours change step\n         */\n        this.minuteStep = 5;\n        /**\n         * seconds changes step\n         */\n        this.secondsStep = 10;\n        /**\n         * if true works in 12H mode and displays AM/PM. If false works in 24H mode and hides AM/PM\n         */\n        this.showMeridian = true;\n        /**\n         * meridian labels based on locale\n         */\n        this.meridians = ['AM', 'PM'];\n        /**\n         * if true hours and minutes fields will be readonly\n         */\n        this.readonlyInput = false;\n        /**\n         * if true hours and minutes fields will be disabled\n         */\n        this.disabled = false;\n        /**\n         * if true scroll inside hours and minutes inputs will change time\n         */\n        this.mousewheel = true;\n        /**\n         * if true the values of hours and minutes can be changed using the up/down arrow keys on the keyboard\n         */\n        this.arrowkeys = true;\n        /**\n         * if true spinner arrows above and below the inputs will be shown\n         */\n        this.showSpinners = true;\n        /**\n         * show seconds in timepicker\n         */\n        this.showSeconds = false;\n        /**\n         * show minutes in timepicker\n         */\n        this.showMinutes = true;\n        /**\n         * placeholder for hours field in timepicker\n         */\n        this.hoursPlaceholder = 'HH';\n        /**\n         * placeholder for minutes field in timepicker\n         */\n        this.minutesPlaceholder = 'MM';\n        /**\n         * placeholder for seconds field in timepicker\n         */\n        this.secondsPlaceholder = 'SS';\n        /**\n         * hours aria label\n         */\n        this.ariaLabelHours = 'hours';\n        /**\n         * minutes aria label\n         */\n        this.ariaLabelMinutes = 'minutes';\n        /**\n         * seconds aria label\n         */\n        this.ariaLabelSeconds = 'seconds';\n    }\n}\nTimepickerConfig.ɵfac = function TimepickerConfig_Factory(t) { return new (t || TimepickerConfig)(); };\nTimepickerConfig.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: TimepickerConfig, factory: TimepickerConfig.ɵfac });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(TimepickerConfig, [{\n        type: Injectable\n    }], function () { return []; }, null); })();\nif (false) {\n    /**\n     * hours change step\n     * @type {?}\n     */\n    TimepickerConfig.prototype.hourStep;\n    /**\n     * hours change step\n     * @type {?}\n     */\n    TimepickerConfig.prototype.minuteStep;\n    /**\n     * seconds changes step\n     * @type {?}\n     */\n    TimepickerConfig.prototype.secondsStep;\n    /**\n     * if true works in 12H mode and displays AM/PM. If false works in 24H mode and hides AM/PM\n     * @type {?}\n     */\n    TimepickerConfig.prototype.showMeridian;\n    /**\n     * meridian labels based on locale\n     * @type {?}\n     */\n    TimepickerConfig.prototype.meridians;\n    /**\n     * if true hours and minutes fields will be readonly\n     * @type {?}\n     */\n    TimepickerConfig.prototype.readonlyInput;\n    /**\n     * if true hours and minutes fields will be disabled\n     * @type {?}\n     */\n    TimepickerConfig.prototype.disabled;\n    /**\n     * if true scroll inside hours and minutes inputs will change time\n     * @type {?}\n     */\n    TimepickerConfig.prototype.mousewheel;\n    /**\n     * if true the values of hours and minutes can be changed using the up/down arrow keys on the keyboard\n     * @type {?}\n     */\n    TimepickerConfig.prototype.arrowkeys;\n    /**\n     * if true spinner arrows above and below the inputs will be shown\n     * @type {?}\n     */\n    TimepickerConfig.prototype.showSpinners;\n    /**\n     * show seconds in timepicker\n     * @type {?}\n     */\n    TimepickerConfig.prototype.showSeconds;\n    /**\n     * show minutes in timepicker\n     * @type {?}\n     */\n    TimepickerConfig.prototype.showMinutes;\n    /**\n     * minimum time user can select\n     * @type {?}\n     */\n    TimepickerConfig.prototype.min;\n    /**\n     * maximum time user can select\n     * @type {?}\n     */\n    TimepickerConfig.prototype.max;\n    /**\n     * placeholder for hours field in timepicker\n     * @type {?}\n     */\n    TimepickerConfig.prototype.hoursPlaceholder;\n    /**\n     * placeholder for minutes field in timepicker\n     * @type {?}\n     */\n    TimepickerConfig.prototype.minutesPlaceholder;\n    /**\n     * placeholder for seconds field in timepicker\n     * @type {?}\n     */\n    TimepickerConfig.prototype.secondsPlaceholder;\n    /**\n     * hours aria label\n     * @type {?}\n     */\n    TimepickerConfig.prototype.ariaLabelHours;\n    /**\n     * minutes aria label\n     * @type {?}\n     */\n    TimepickerConfig.prototype.ariaLabelMinutes;\n    /**\n     * seconds aria label\n     * @type {?}\n     */\n    TimepickerConfig.prototype.ariaLabelSeconds;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass TimepickerState {\n}\nif (false) {\n    /** @type {?} */\n    TimepickerState.prototype.value;\n    /** @type {?} */\n    TimepickerState.prototype.config;\n    /** @type {?} */\n    TimepickerState.prototype.controls;\n}\n/** @type {?} */\nconst initialState = {\n    value: null,\n    config: new TimepickerConfig(),\n    controls: {\n        canIncrementHours: true,\n        canIncrementMinutes: true,\n        canIncrementSeconds: true,\n        canDecrementHours: true,\n        canDecrementMinutes: true,\n        canDecrementSeconds: true,\n        canToggleMeridian: true\n    }\n};\n// tslint:disable-next-line:cyclomatic-complexity\n/**\n * @param {?=} state\n * @param {?=} action\n * @return {?}\n */\nfunction timepickerReducer(state = initialState, action) {\n    switch (action.type) {\n        case TimepickerActions.WRITE_VALUE: {\n            return Object.assign({}, state, { value: action.payload });\n        }\n        case TimepickerActions.CHANGE_HOURS: {\n            if (!canChangeValue(state.config, action.payload) ||\n                !canChangeHours(action.payload, state.controls)) {\n                return state;\n            }\n            /** @type {?} */\n            const _newTime = changeTime(state.value, { hour: action.payload.step });\n            if ((state.config.max || state.config.min) && !isValidLimit(state.config, _newTime)) {\n                return state;\n            }\n            return Object.assign({}, state, { value: _newTime });\n        }\n        case TimepickerActions.CHANGE_MINUTES: {\n            if (!canChangeValue(state.config, action.payload) ||\n                !canChangeMinutes(action.payload, state.controls)) {\n                return state;\n            }\n            /** @type {?} */\n            const _newTime = changeTime(state.value, { minute: action.payload.step });\n            if ((state.config.max || state.config.min) && !isValidLimit(state.config, _newTime)) {\n                return state;\n            }\n            return Object.assign({}, state, { value: _newTime });\n        }\n        case TimepickerActions.CHANGE_SECONDS: {\n            if (!canChangeValue(state.config, action.payload) ||\n                !canChangeSeconds(action.payload, state.controls)) {\n                return state;\n            }\n            /** @type {?} */\n            const _newTime = changeTime(state.value, {\n                seconds: action.payload.step\n            });\n            if ((state.config.max || state.config.min) && !isValidLimit(state.config, _newTime)) {\n                return state;\n            }\n            return Object.assign({}, state, { value: _newTime });\n        }\n        case TimepickerActions.SET_TIME_UNIT: {\n            if (!canChangeValue(state.config)) {\n                return state;\n            }\n            /** @type {?} */\n            const _newTime = setTime(state.value, action.payload);\n            return Object.assign({}, state, { value: _newTime });\n        }\n        case TimepickerActions.UPDATE_CONTROLS: {\n            /** @type {?} */\n            const _newControlsState = timepickerControls(state.value, action.payload);\n            /** @type {?} */\n            const _newState = {\n                value: state.value,\n                config: action.payload,\n                controls: _newControlsState\n            };\n            if (state.config.showMeridian !== _newState.config.showMeridian) {\n                if (state.value) {\n                    _newState.value = new Date(state.value);\n                }\n            }\n            return Object.assign({}, state, _newState);\n        }\n        default:\n            return state;\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass TimepickerStore extends MiniStore {\n    constructor() {\n        /** @type {?} */\n        const _dispatcher = new BehaviorSubject({\n            type: '[mini-ngrx] dispatcher init'\n        });\n        /** @type {?} */\n        const state = new MiniState(initialState, _dispatcher, timepickerReducer);\n        super(_dispatcher, timepickerReducer, state);\n    }\n}\nTimepickerStore.ɵfac = function TimepickerStore_Factory(t) { return new (t || TimepickerStore)(); };\nTimepickerStore.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: TimepickerStore, factory: TimepickerStore.ɵfac });\n/** @nocollapse */\nTimepickerStore.ctorParameters = () => [];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(TimepickerStore, [{\n        type: Injectable\n    }], function () { return []; }, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst TIMEPICKER_CONTROL_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    /* tslint:disable-next-line: no-use-before-declare */\n    useExisting: forwardRef((/**\n     * @return {?}\n     */\n    () => TimepickerComponent)),\n    multi: true\n};\nclass TimepickerComponent {\n    /**\n     * @param {?} _config\n     * @param {?} _cd\n     * @param {?} _store\n     * @param {?} _timepickerActions\n     */\n    constructor(_config, _cd, _store, _timepickerActions) {\n        this._cd = _cd;\n        this._store = _store;\n        this._timepickerActions = _timepickerActions;\n        /**\n         * emits true if value is a valid date\n         */\n        this.isValid = new EventEmitter();\n        // min\\max validation for input fields\n        this.invalidHours = false;\n        this.invalidMinutes = false;\n        this.invalidSeconds = false;\n        // control value accessor methods\n        // tslint:disable-next-line:no-any\n        this.onChange = Function.prototype;\n        // tslint:disable-next-line:no-any\n        this.onTouched = Function.prototype;\n        Object.assign(this, _config);\n        this.timepickerSub = _store\n            .select((/**\n         * @param {?} state\n         * @return {?}\n         */\n        state => state.value))\n            .subscribe((/**\n         * @param {?} value\n         * @return {?}\n         */\n        (value) => {\n            // update UI values if date changed\n            this._renderTime(value);\n            this.onChange(value);\n            this._store.dispatch(this._timepickerActions.updateControls(getControlsValue(this)));\n        }));\n        _store\n            .select((/**\n         * @param {?} state\n         * @return {?}\n         */\n        state => state.controls))\n            .subscribe((/**\n         * @param {?} controlsState\n         * @return {?}\n         */\n        (controlsState) => {\n            this.isValid.emit(isInputValid(this.hours, this.minutes, this.seconds, this.isPM()));\n            Object.assign(this, controlsState);\n            _cd.markForCheck();\n        }));\n    }\n    /**\n     * @deprecated - please use `isEditable` instead\n     * @return {?}\n     */\n    get isSpinnersVisible() {\n        return this.showSpinners && !this.readonlyInput;\n    }\n    /**\n     * @return {?}\n     */\n    get isEditable() {\n        return !(this.readonlyInput || this.disabled);\n    }\n    /**\n     * @return {?}\n     */\n    resetValidation() {\n        this.invalidHours = false;\n        this.invalidMinutes = false;\n        this.invalidSeconds = false;\n    }\n    /**\n     * @return {?}\n     */\n    isPM() {\n        return this.showMeridian && this.meridian === this.meridians[1];\n    }\n    /**\n     * @param {?} $event\n     * @return {?}\n     */\n    prevDef($event) {\n        $event.preventDefault();\n    }\n    /**\n     * @param {?} $event\n     * @return {?}\n     */\n    wheelSign($event) {\n        return Math.sign($event.deltaY) * -1;\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        this._store.dispatch(this._timepickerActions.updateControls(getControlsValue(this)));\n    }\n    /**\n     * @param {?} step\n     * @param {?=} source\n     * @return {?}\n     */\n    changeHours(step, source = '') {\n        this.resetValidation();\n        this._store.dispatch(this._timepickerActions.changeHours({ step, source }));\n    }\n    /**\n     * @param {?} step\n     * @param {?=} source\n     * @return {?}\n     */\n    changeMinutes(step, source = '') {\n        this.resetValidation();\n        this._store.dispatch(this._timepickerActions.changeMinutes({ step, source }));\n    }\n    /**\n     * @param {?} step\n     * @param {?=} source\n     * @return {?}\n     */\n    changeSeconds(step, source = '') {\n        this.resetValidation();\n        this._store.dispatch(this._timepickerActions.changeSeconds({ step, source }));\n    }\n    /**\n     * @param {?} hours\n     * @return {?}\n     */\n    updateHours(hours) {\n        this.resetValidation();\n        this.hours = hours;\n        /** @type {?} */\n        const isValid = isHourInputValid(this.hours, this.isPM()) && this.isValidLimit();\n        if (!isValid) {\n            this.invalidHours = true;\n            this.isValid.emit(false);\n            this.onChange(null);\n            return;\n        }\n        this._updateTime();\n    }\n    /**\n     * @param {?} minutes\n     * @return {?}\n     */\n    updateMinutes(minutes) {\n        this.resetValidation();\n        this.minutes = minutes;\n        /** @type {?} */\n        const isValid = isMinuteInputValid(this.minutes) && this.isValidLimit();\n        if (!isValid) {\n            this.invalidMinutes = true;\n            this.isValid.emit(false);\n            this.onChange(null);\n            return;\n        }\n        this._updateTime();\n    }\n    /**\n     * @param {?} seconds\n     * @return {?}\n     */\n    updateSeconds(seconds) {\n        this.resetValidation();\n        this.seconds = seconds;\n        /** @type {?} */\n        const isValid = isSecondInputValid(this.seconds) && this.isValidLimit();\n        if (!isValid) {\n            this.invalidSeconds = true;\n            this.isValid.emit(false);\n            this.onChange(null);\n            return;\n        }\n        this._updateTime();\n    }\n    /**\n     * @return {?}\n     */\n    isValidLimit() {\n        return isInputLimitValid({\n            hour: this.hours,\n            minute: this.minutes,\n            seconds: this.seconds,\n            isPM: this.isPM()\n        }, this.max, this.min);\n    }\n    /**\n     * @return {?}\n     */\n    _updateTime() {\n        /** @type {?} */\n        const _seconds = this.showSeconds ? this.seconds : void 0;\n        /** @type {?} */\n        const _minutes = this.showMinutes ? this.minutes : void 0;\n        if (!isInputValid(this.hours, _minutes, _seconds, this.isPM())) {\n            this.isValid.emit(false);\n            this.onChange(null);\n            return;\n        }\n        this._store.dispatch(this._timepickerActions.setTime({\n            hour: this.hours,\n            minute: this.minutes,\n            seconds: this.seconds,\n            isPM: this.isPM()\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    toggleMeridian() {\n        if (!this.showMeridian || !this.isEditable) {\n            return;\n        }\n        /** @type {?} */\n        const _hoursPerDayHalf = 12;\n        this._store.dispatch(this._timepickerActions.changeHours({\n            step: _hoursPerDayHalf,\n            source: ''\n        }));\n    }\n    /**\n     * Write a new value to the element.\n     * @param {?} obj\n     * @return {?}\n     */\n    writeValue(obj) {\n        if (isValidDate(obj)) {\n            this._store.dispatch(this._timepickerActions.writeValue(parseTime(obj)));\n        }\n        else if (obj == null) {\n            this._store.dispatch(this._timepickerActions.writeValue(null));\n        }\n    }\n    /**\n     * Set the function to be called when the control receives a change event.\n     * @param {?} fn\n     * @return {?}\n     */\n    // tslint:disable-next-line:no-any\n    registerOnChange(fn) {\n        this.onChange = fn;\n    }\n    /**\n     * Set the function to be called when the control receives a touch event.\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnTouched(fn) {\n        this.onTouched = fn;\n    }\n    /**\n     * This function is called when the control status changes to or from \"disabled\".\n     * Depending on the value, it will enable or disable the appropriate DOM element.\n     *\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n        this._cd.markForCheck();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this.timepickerSub.unsubscribe();\n    }\n    /**\n     * @private\n     * @param {?} value\n     * @return {?}\n     */\n    _renderTime(value) {\n        if (!isValidDate(value)) {\n            this.hours = '';\n            this.minutes = '';\n            this.seconds = '';\n            this.meridian = this.meridians[0];\n            return;\n        }\n        /** @type {?} */\n        const _value = parseTime(value);\n        /** @type {?} */\n        const _hoursPerDayHalf = 12;\n        /** @type {?} */\n        let _hours = _value.getHours();\n        if (this.showMeridian) {\n            this.meridian = this.meridians[_hours >= _hoursPerDayHalf ? 1 : 0];\n            _hours = _hours % _hoursPerDayHalf;\n            // should be 12 PM, not 00 PM\n            if (_hours === 0) {\n                _hours = _hoursPerDayHalf;\n            }\n        }\n        this.hours = padNumber(_hours);\n        this.minutes = padNumber(_value.getMinutes());\n        this.seconds = padNumber(_value.getUTCSeconds());\n    }\n}\nTimepickerComponent.ɵfac = function TimepickerComponent_Factory(t) { return new (t || TimepickerComponent)(ɵngcc0.ɵɵdirectiveInject(TimepickerConfig), ɵngcc0.ɵɵdirectiveInject(ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(TimepickerStore), ɵngcc0.ɵɵdirectiveInject(TimepickerActions)); };\nTimepickerComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: TimepickerComponent, selectors: [[\"timepicker\"]], inputs: { disabled: \"disabled\", hourStep: \"hourStep\", minuteStep: \"minuteStep\", secondsStep: \"secondsStep\", readonlyInput: \"readonlyInput\", mousewheel: \"mousewheel\", arrowkeys: \"arrowkeys\", showSpinners: \"showSpinners\", showMeridian: \"showMeridian\", showMinutes: \"showMinutes\", showSeconds: \"showSeconds\", meridians: \"meridians\", min: \"min\", max: \"max\", hoursPlaceholder: \"hoursPlaceholder\", minutesPlaceholder: \"minutesPlaceholder\", secondsPlaceholder: \"secondsPlaceholder\" }, outputs: { isValid: \"isValid\" }, features: [ɵngcc0.ɵɵProvidersFeature([TIMEPICKER_CONTROL_VALUE_ACCESSOR, TimepickerStore]), ɵngcc0.ɵɵNgOnChangesFeature], decls: 31, vars: 33, consts: [[1, \"text-center\", 3, \"hidden\"], [1, \"btn\", \"btn-link\", 3, \"click\"], [1, \"bs-chevron\", \"bs-chevron-up\"], [4, \"ngIf\"], [1, \"form-group\"], [\"type\", \"text\", \"maxlength\", \"2\", 1, \"form-control\", \"text-center\", \"bs-timepicker-field\", 3, \"placeholder\", \"readonly\", \"disabled\", \"value\", \"wheel\", \"keydown.ArrowUp\", \"keydown.ArrowDown\", \"change\"], [\"class\", \"form-group\", 3, \"has-error\", 4, \"ngIf\"], [1, \"bs-chevron\", \"bs-chevron-down\"], [\"type\", \"button\", 1, \"btn\", \"btn-default\", \"text-center\", 3, \"disabled\", \"click\"]], template: function TimepickerComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"table\");\n        ɵngcc0.ɵɵelementStart(1, \"tbody\");\n        ɵngcc0.ɵɵelementStart(2, \"tr\", 0);\n        ɵngcc0.ɵɵelementStart(3, \"td\");\n        ɵngcc0.ɵɵelementStart(4, \"a\", 1);\n        ɵngcc0.ɵɵlistener(\"click\", function TimepickerComponent_Template_a_click_4_listener() { return ctx.changeHours(ctx.hourStep); });\n        ɵngcc0.ɵɵelement(5, \"span\", 2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(6, TimepickerComponent_td_6_Template, 2, 0, \"td\", 3);\n        ɵngcc0.ɵɵtemplate(7, TimepickerComponent_td_7_Template, 3, 2, \"td\", 3);\n        ɵngcc0.ɵɵtemplate(8, TimepickerComponent_td_8_Template, 2, 0, \"td\", 3);\n        ɵngcc0.ɵɵtemplate(9, TimepickerComponent_td_9_Template, 3, 2, \"td\", 3);\n        ɵngcc0.ɵɵtemplate(10, TimepickerComponent_td_10_Template, 2, 0, \"td\", 3);\n        ɵngcc0.ɵɵtemplate(11, TimepickerComponent_td_11_Template, 1, 0, \"td\", 3);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(12, \"tr\");\n        ɵngcc0.ɵɵelementStart(13, \"td\", 4);\n        ɵngcc0.ɵɵelementStart(14, \"input\", 5);\n        ɵngcc0.ɵɵlistener(\"wheel\", function TimepickerComponent_Template_input_wheel_14_listener($event) { ctx.prevDef($event); return ctx.changeHours(ctx.hourStep * ctx.wheelSign($event), \"wheel\"); })(\"keydown.ArrowUp\", function TimepickerComponent_Template_input_keydown_ArrowUp_14_listener() { return ctx.changeHours(ctx.hourStep, \"key\"); })(\"keydown.ArrowDown\", function TimepickerComponent_Template_input_keydown_ArrowDown_14_listener() { return ctx.changeHours(-ctx.hourStep, \"key\"); })(\"change\", function TimepickerComponent_Template_input_change_14_listener($event) { return ctx.updateHours($event.target.value); });\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(15, TimepickerComponent_td_15_Template, 2, 0, \"td\", 3);\n        ɵngcc0.ɵɵtemplate(16, TimepickerComponent_td_16_Template, 2, 9, \"td\", 6);\n        ɵngcc0.ɵɵtemplate(17, TimepickerComponent_td_17_Template, 2, 0, \"td\", 3);\n        ɵngcc0.ɵɵtemplate(18, TimepickerComponent_td_18_Template, 2, 9, \"td\", 6);\n        ɵngcc0.ɵɵtemplate(19, TimepickerComponent_td_19_Template, 2, 0, \"td\", 3);\n        ɵngcc0.ɵɵtemplate(20, TimepickerComponent_td_20_Template, 3, 4, \"td\", 3);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(21, \"tr\", 0);\n        ɵngcc0.ɵɵelementStart(22, \"td\");\n        ɵngcc0.ɵɵelementStart(23, \"a\", 1);\n        ɵngcc0.ɵɵlistener(\"click\", function TimepickerComponent_Template_a_click_23_listener() { return ctx.changeHours(-ctx.hourStep); });\n        ɵngcc0.ɵɵelement(24, \"span\", 7);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(25, TimepickerComponent_td_25_Template, 2, 0, \"td\", 3);\n        ɵngcc0.ɵɵtemplate(26, TimepickerComponent_td_26_Template, 3, 2, \"td\", 3);\n        ɵngcc0.ɵɵtemplate(27, TimepickerComponent_td_27_Template, 2, 0, \"td\", 3);\n        ɵngcc0.ɵɵtemplate(28, TimepickerComponent_td_28_Template, 3, 2, \"td\", 3);\n        ɵngcc0.ɵɵtemplate(29, TimepickerComponent_td_29_Template, 2, 0, \"td\", 3);\n        ɵngcc0.ɵɵtemplate(30, TimepickerComponent_td_30_Template, 1, 0, \"td\", 3);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"hidden\", !ctx.showSpinners);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵclassProp(\"disabled\", !ctx.canIncrementHours || !ctx.isEditable);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.showMinutes);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.showMinutes);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.showSeconds);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.showSeconds);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.showMeridian);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.showMeridian);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵclassProp(\"has-error\", ctx.invalidHours);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵclassProp(\"is-invalid\", ctx.invalidHours);\n        ɵngcc0.ɵɵproperty(\"placeholder\", ctx.hoursPlaceholder)(\"readonly\", ctx.readonlyInput)(\"disabled\", ctx.disabled)(\"value\", ctx.hours);\n        ɵngcc0.ɵɵattribute(\"aria-label\", ctx.labelHours);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.showMinutes);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.showMinutes);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.showSeconds);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.showSeconds);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.showMeridian);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.showMeridian);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"hidden\", !ctx.showSpinners);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵclassProp(\"disabled\", !ctx.canDecrementHours || !ctx.isEditable);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.showMinutes);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.showMinutes);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.showSeconds);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.showSeconds);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.showMeridian);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.showMeridian);\n    } }, directives: [ɵngcc1.NgIf], styles: [\"\\n    .bs-chevron {\\n      border-style: solid;\\n      display: block;\\n      width: 9px;\\n      height: 9px;\\n      position: relative;\\n      border-width: 3px 0px 0 3px;\\n    }\\n\\n    .bs-chevron-up {\\n      -webkit-transform: rotate(45deg);\\n      transform: rotate(45deg);\\n      top: 2px;\\n    }\\n\\n    .bs-chevron-down {\\n      -webkit-transform: rotate(-135deg);\\n      transform: rotate(-135deg);\\n      top: -2px;\\n    }\\n\\n    .bs-timepicker-field {\\n      width: 50px;\\n      padding: .375rem .55rem;\\n    }\\n  \"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nTimepickerComponent.ctorParameters = () => [\n    { type: TimepickerConfig },\n    { type: ChangeDetectorRef },\n    { type: TimepickerStore },\n    { type: TimepickerActions }\n];\nTimepickerComponent.propDecorators = {\n    hourStep: [{ type: Input }],\n    minuteStep: [{ type: Input }],\n    secondsStep: [{ type: Input }],\n    readonlyInput: [{ type: Input }],\n    disabled: [{ type: Input }],\n    mousewheel: [{ type: Input }],\n    arrowkeys: [{ type: Input }],\n    showSpinners: [{ type: Input }],\n    showMeridian: [{ type: Input }],\n    showMinutes: [{ type: Input }],\n    showSeconds: [{ type: Input }],\n    meridians: [{ type: Input }],\n    min: [{ type: Input }],\n    max: [{ type: Input }],\n    hoursPlaceholder: [{ type: Input }],\n    minutesPlaceholder: [{ type: Input }],\n    secondsPlaceholder: [{ type: Input }],\n    isValid: [{ type: Output }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(TimepickerComponent, [{\n        type: Component,\n        args: [{\n                selector: 'timepicker',\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                providers: [TIMEPICKER_CONTROL_VALUE_ACCESSOR, TimepickerStore],\n                template: \"<table>\\n  <tbody>\\n  <tr class=\\\"text-center\\\" [hidden]=\\\"!showSpinners\\\">\\n    <!-- increment hours button-->\\n    <td>\\n      <a class=\\\"btn btn-link\\\" [class.disabled]=\\\"!canIncrementHours || !isEditable\\\"\\n         (click)=\\\"changeHours(hourStep)\\\"\\n      ><span class=\\\"bs-chevron bs-chevron-up\\\"></span></a>\\n    </td>\\n    <!-- divider -->\\n    <td *ngIf=\\\"showMinutes\\\">&nbsp;&nbsp;&nbsp;</td>\\n    <!-- increment minutes button -->\\n    <td *ngIf=\\\"showMinutes\\\">\\n      <a class=\\\"btn btn-link\\\" [class.disabled]=\\\"!canIncrementMinutes || !isEditable\\\"\\n         (click)=\\\"changeMinutes(minuteStep)\\\"\\n      ><span class=\\\"bs-chevron bs-chevron-up\\\"></span></a>\\n    </td>\\n    <!-- divider -->\\n    <td *ngIf=\\\"showSeconds\\\">&nbsp;</td>\\n    <!-- increment seconds button -->\\n    <td *ngIf=\\\"showSeconds\\\">\\n      <a class=\\\"btn btn-link\\\" [class.disabled]=\\\"!canIncrementSeconds || !isEditable\\\"\\n         (click)=\\\"changeSeconds(secondsStep)\\\">\\n        <span class=\\\"bs-chevron bs-chevron-up\\\"></span>\\n      </a>\\n    </td>\\n    <!-- space between -->\\n    <td *ngIf=\\\"showMeridian\\\">&nbsp;&nbsp;&nbsp;</td>\\n    <!-- meridian placeholder-->\\n    <td *ngIf=\\\"showMeridian\\\"></td>\\n  </tr>\\n  <tr>\\n    <!-- hours -->\\n    <td class=\\\"form-group\\\" [class.has-error]=\\\"invalidHours\\\">\\n      <input type=\\\"text\\\" [class.is-invalid]=\\\"invalidHours\\\"\\n             class=\\\"form-control text-center bs-timepicker-field\\\"\\n             [placeholder]=\\\"hoursPlaceholder\\\"\\n             maxlength=\\\"2\\\"\\n             [readonly]=\\\"readonlyInput\\\"\\n             [disabled]=\\\"disabled\\\"\\n             [value]=\\\"hours\\\"\\n             (wheel)=\\\"prevDef($event);changeHours(hourStep * wheelSign($event), 'wheel')\\\"\\n             (keydown.ArrowUp)=\\\"changeHours(hourStep, 'key')\\\"\\n             (keydown.ArrowDown)=\\\"changeHours(-hourStep, 'key')\\\"\\n             (change)=\\\"updateHours($event.target.value)\\\" [attr.aria-label]=\\\"labelHours\\\"></td>\\n    <!-- divider -->\\n    <td *ngIf=\\\"showMinutes\\\">&nbsp;:&nbsp;</td>\\n    <!-- minutes -->\\n    <td class=\\\"form-group\\\" *ngIf=\\\"showMinutes\\\" [class.has-error]=\\\"invalidMinutes\\\">\\n      <input type=\\\"text\\\" [class.is-invalid]=\\\"invalidMinutes\\\"\\n             class=\\\"form-control text-center bs-timepicker-field\\\"\\n             [placeholder]=\\\"minutesPlaceholder\\\"\\n             maxlength=\\\"2\\\"\\n             [readonly]=\\\"readonlyInput\\\"\\n             [disabled]=\\\"disabled\\\"\\n             [value]=\\\"minutes\\\"\\n             (wheel)=\\\"prevDef($event);changeMinutes(minuteStep * wheelSign($event), 'wheel')\\\"\\n             (keydown.ArrowUp)=\\\"changeMinutes(minuteStep, 'key')\\\"\\n             (keydown.ArrowDown)=\\\"changeMinutes(-minuteStep, 'key')\\\"\\n             (change)=\\\"updateMinutes($event.target.value)\\\" [attr.aria-label]=\\\"labelMinutes\\\">\\n    </td>\\n    <!-- divider -->\\n    <td *ngIf=\\\"showSeconds\\\">&nbsp;:&nbsp;</td>\\n    <!-- seconds -->\\n    <td class=\\\"form-group\\\" *ngIf=\\\"showSeconds\\\" [class.has-error]=\\\"invalidSeconds\\\">\\n      <input type=\\\"text\\\" [class.is-invalid]=\\\"invalidSeconds\\\"\\n             class=\\\"form-control text-center bs-timepicker-field\\\"\\n             [placeholder]=\\\"secondsPlaceholder\\\"\\n             maxlength=\\\"2\\\"\\n             [readonly]=\\\"readonlyInput\\\"\\n             [disabled]=\\\"disabled\\\"\\n             [value]=\\\"seconds\\\"\\n             (wheel)=\\\"prevDef($event);changeSeconds(secondsStep * wheelSign($event), 'wheel')\\\"\\n             (keydown.ArrowUp)=\\\"changeSeconds(secondsStep, 'key')\\\"\\n             (keydown.ArrowDown)=\\\"changeSeconds(-secondsStep, 'key')\\\"\\n             (change)=\\\"updateSeconds($event.target.value)\\\" [attr.aria-label]=\\\"labelSeconds\\\">\\n    </td>\\n    <!-- space between -->\\n    <td *ngIf=\\\"showMeridian\\\">&nbsp;&nbsp;&nbsp;</td>\\n    <!-- meridian -->\\n    <td *ngIf=\\\"showMeridian\\\">\\n      <button type=\\\"button\\\" class=\\\"btn btn-default text-center\\\"\\n              [disabled]=\\\"!isEditable || !canToggleMeridian\\\"\\n              [class.disabled]=\\\"!isEditable || !canToggleMeridian\\\"\\n              (click)=\\\"toggleMeridian()\\\"\\n      >{{ meridian }}\\n      </button>\\n    </td>\\n  </tr>\\n  <tr class=\\\"text-center\\\" [hidden]=\\\"!showSpinners\\\">\\n    <!-- decrement hours button-->\\n    <td>\\n      <a class=\\\"btn btn-link\\\" [class.disabled]=\\\"!canDecrementHours || !isEditable\\\"\\n         (click)=\\\"changeHours(-hourStep)\\\">\\n        <span class=\\\"bs-chevron bs-chevron-down\\\"></span>\\n      </a>\\n    </td>\\n    <!-- divider -->\\n    <td *ngIf=\\\"showMinutes\\\">&nbsp;&nbsp;&nbsp;</td>\\n    <!-- decrement minutes button-->\\n    <td *ngIf=\\\"showMinutes\\\">\\n      <a class=\\\"btn btn-link\\\" [class.disabled]=\\\"!canDecrementMinutes || !isEditable\\\"\\n         (click)=\\\"changeMinutes(-minuteStep)\\\">\\n        <span class=\\\"bs-chevron bs-chevron-down\\\"></span>\\n      </a>\\n    </td>\\n    <!-- divider -->\\n    <td *ngIf=\\\"showSeconds\\\">&nbsp;</td>\\n    <!-- decrement seconds button-->\\n    <td *ngIf=\\\"showSeconds\\\">\\n      <a class=\\\"btn btn-link\\\" [class.disabled]=\\\"!canDecrementSeconds || !isEditable\\\"\\n         (click)=\\\"changeSeconds(-secondsStep)\\\">\\n        <span class=\\\"bs-chevron bs-chevron-down\\\"></span>\\n      </a>\\n    </td>\\n    <!-- space between -->\\n    <td *ngIf=\\\"showMeridian\\\">&nbsp;&nbsp;&nbsp;</td>\\n    <!-- meridian placeholder-->\\n    <td *ngIf=\\\"showMeridian\\\"></td>\\n  </tr>\\n  </tbody>\\n</table>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                styles: [`\n    .bs-chevron {\n      border-style: solid;\n      display: block;\n      width: 9px;\n      height: 9px;\n      position: relative;\n      border-width: 3px 0px 0 3px;\n    }\n\n    .bs-chevron-up {\n      -webkit-transform: rotate(45deg);\n      transform: rotate(45deg);\n      top: 2px;\n    }\n\n    .bs-chevron-down {\n      -webkit-transform: rotate(-135deg);\n      transform: rotate(-135deg);\n      top: -2px;\n    }\n\n    .bs-timepicker-field {\n      width: 50px;\n      padding: .375rem .55rem;\n    }\n  `]\n            }]\n    }], function () { return [{ type: TimepickerConfig }, { type: ChangeDetectorRef }, { type: TimepickerStore }, { type: TimepickerActions }]; }, { isValid: [{\n            type: Output\n        }], disabled: [{\n            type: Input\n        }], hourStep: [{\n            type: Input\n        }], minuteStep: [{\n            type: Input\n        }], secondsStep: [{\n            type: Input\n        }], readonlyInput: [{\n            type: Input\n        }], mousewheel: [{\n            type: Input\n        }], arrowkeys: [{\n            type: Input\n        }], showSpinners: [{\n            type: Input\n        }], showMeridian: [{\n            type: Input\n        }], showMinutes: [{\n            type: Input\n        }], showSeconds: [{\n            type: Input\n        }], meridians: [{\n            type: Input\n        }], min: [{\n            type: Input\n        }], max: [{\n            type: Input\n        }], hoursPlaceholder: [{\n            type: Input\n        }], minutesPlaceholder: [{\n            type: Input\n        }], secondsPlaceholder: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /**\n     * hours change step\n     * @type {?}\n     */\n    TimepickerComponent.prototype.hourStep;\n    /**\n     * hours change step\n     * @type {?}\n     */\n    TimepickerComponent.prototype.minuteStep;\n    /**\n     * seconds change step\n     * @type {?}\n     */\n    TimepickerComponent.prototype.secondsStep;\n    /**\n     * if true hours and minutes fields will be readonly\n     * @type {?}\n     */\n    TimepickerComponent.prototype.readonlyInput;\n    /**\n     * if true hours and minutes fields will be disabled\n     * @type {?}\n     */\n    TimepickerComponent.prototype.disabled;\n    /**\n     * if true scroll inside hours and minutes inputs will change time\n     * @type {?}\n     */\n    TimepickerComponent.prototype.mousewheel;\n    /**\n     * if true the values of hours and minutes can be changed using the up/down arrow keys on the keyboard\n     * @type {?}\n     */\n    TimepickerComponent.prototype.arrowkeys;\n    /**\n     * if true spinner arrows above and below the inputs will be shown\n     * @type {?}\n     */\n    TimepickerComponent.prototype.showSpinners;\n    /**\n     * if true meridian button will be shown\n     * @type {?}\n     */\n    TimepickerComponent.prototype.showMeridian;\n    /**\n     * show minutes in timepicker\n     * @type {?}\n     */\n    TimepickerComponent.prototype.showMinutes;\n    /**\n     * show seconds in timepicker\n     * @type {?}\n     */\n    TimepickerComponent.prototype.showSeconds;\n    /**\n     * meridian labels based on locale\n     * @type {?}\n     */\n    TimepickerComponent.prototype.meridians;\n    /**\n     * minimum time user can select\n     * @type {?}\n     */\n    TimepickerComponent.prototype.min;\n    /**\n     * maximum time user can select\n     * @type {?}\n     */\n    TimepickerComponent.prototype.max;\n    /**\n     * placeholder for hours field in timepicker\n     * @type {?}\n     */\n    TimepickerComponent.prototype.hoursPlaceholder;\n    /**\n     * placeholder for minutes field in timepicker\n     * @type {?}\n     */\n    TimepickerComponent.prototype.minutesPlaceholder;\n    /**\n     * placeholder for seconds field in timepicker\n     * @type {?}\n     */\n    TimepickerComponent.prototype.secondsPlaceholder;\n    /**\n     * emits true if value is a valid date\n     * @type {?}\n     */\n    TimepickerComponent.prototype.isValid;\n    /** @type {?} */\n    TimepickerComponent.prototype.hours;\n    /** @type {?} */\n    TimepickerComponent.prototype.minutes;\n    /** @type {?} */\n    TimepickerComponent.prototype.seconds;\n    /** @type {?} */\n    TimepickerComponent.prototype.meridian;\n    /** @type {?} */\n    TimepickerComponent.prototype.invalidHours;\n    /** @type {?} */\n    TimepickerComponent.prototype.invalidMinutes;\n    /** @type {?} */\n    TimepickerComponent.prototype.invalidSeconds;\n    /** @type {?} */\n    TimepickerComponent.prototype.labelHours;\n    /** @type {?} */\n    TimepickerComponent.prototype.labelMinutes;\n    /** @type {?} */\n    TimepickerComponent.prototype.labelSeconds;\n    /** @type {?} */\n    TimepickerComponent.prototype.canIncrementHours;\n    /** @type {?} */\n    TimepickerComponent.prototype.canIncrementMinutes;\n    /** @type {?} */\n    TimepickerComponent.prototype.canIncrementSeconds;\n    /** @type {?} */\n    TimepickerComponent.prototype.canDecrementHours;\n    /** @type {?} */\n    TimepickerComponent.prototype.canDecrementMinutes;\n    /** @type {?} */\n    TimepickerComponent.prototype.canDecrementSeconds;\n    /** @type {?} */\n    TimepickerComponent.prototype.canToggleMeridian;\n    /** @type {?} */\n    TimepickerComponent.prototype.onChange;\n    /** @type {?} */\n    TimepickerComponent.prototype.onTouched;\n    /** @type {?} */\n    TimepickerComponent.prototype.timepickerSub;\n    /**\n     * @type {?}\n     * @private\n     */\n    TimepickerComponent.prototype._cd;\n    /**\n     * @type {?}\n     * @private\n     */\n    TimepickerComponent.prototype._store;\n    /**\n     * @type {?}\n     * @private\n     */\n    TimepickerComponent.prototype._timepickerActions;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass TimepickerModule {\n    /**\n     * @return {?}\n     */\n    static forRoot() {\n        return {\n            ngModule: TimepickerModule,\n            providers: [TimepickerConfig, TimepickerActions, TimepickerStore]\n        };\n    }\n}\nTimepickerModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: TimepickerModule });\nTimepickerModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function TimepickerModule_Factory(t) { return new (t || TimepickerModule)(); }, imports: [[CommonModule]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(TimepickerModule, { declarations: function () { return [TimepickerComponent]; }, imports: function () { return [CommonModule]; }, exports: function () { return [TimepickerComponent]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(TimepickerModule, [{\n        type: NgModule,\n        args: [{\n                imports: [CommonModule],\n                declarations: [TimepickerComponent],\n                exports: [TimepickerComponent]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { TimepickerActions, TimepickerComponent, TimepickerConfig, TimepickerModule, TimepickerStore, TIMEPICKER_CONTROL_VALUE_ACCESSOR as ɵa };\n\n//# sourceMappingURL=ngx-bootstrap-timepicker.js.map","export default \"<div class=\\\"card w-100  bg-{{action.action.messageType}}\\\">\\n    <div class=\\\"card-header d-flex justify-content-end\\\">\\n            <input [(ngModel)]=\\\"action.action.title\\\" class=\\\"mr-auto\\\" type=\\\"text\\\" placeholder=\\\"Titel\\\">\\n            <select name=\\\"activeUser\\\" [(ngModel)]=\\\"action.action.user\\\">\\n                <option value=\\\"undefined\\\" disabled>Benutzer</option>\\n                <option value=\\\"all\\\">Alle</option>\\n                <option *ngFor=\\\"let user of globalVar.user.users;\\\" [ngValue]=\\\"user.name\\\">\\n                    {{ user.name }}\\n                </option>\\n            </select>\\n            <select name=\\\"alertType\\\" [(ngModel)]=\\\"action.action.messageType\\\">\\n                <option value=\\\"undefined\\\" disabled>Farbe</option>\\n                <option *ngFor=\\\"let type of alertTypen\\\" [ngValue]=\\\"type.value\\\">{{type.name}}</option>\\n            </select>\\n    </div>\\n    <p class=\\\"m-2 card-block card-text text-xs-center\\\">\\n        <input [(ngModel)]=\\\"action.action.message\\\" class=\\\"col-form-label w-100\\\" type=\\\"text\\\" placeholder=\\\"Nachricht\\\">\\n    </p>\\n</div>\";","export default \"<select [(ngModel)]=\\\"action.action\\\">\\n    <option disabled value=\\\"[object Object]\\\">Wähle ein Gerät</option>\\n    <option *ngFor=\\\"let device of devicelist | ObjNgFor\\\" [ngValue]=\\\"device\\\">\\n        {{device.name}} ({{device.Raum}})\\n    </option>\\n</select>\\n<select name=\\\"alertType\\\" [(ngModel)]=\\\"action.switchstatus\\\">\\n    <option disabled value=\\\"false\\\">Wähle einen Status</option>\\n    <option value=\\\"1\\\">{{action.action.buttonLabelOn || \\\"An\\\"}}</option>\\n    <option value=\\\"0\\\">{{action.action.buttonLabelOff || \\\"Aus\\\"}}</option>\\n    <option value=\\\"toggle\\\">Umschalten</option>\\n</select>\";","export default \"Die Gruppe\\n<select [(ngModel)]=\\\"action.action\\\">\\n    <option disabled value=\\\"false\\\">Wähle eine Gruppe</option>\\n    <option *ngFor=\\\"let group of groups | ObjNgFor\\\" [ngValue]=\\\"group\\\">\\n        {{group.name}} von {{group.user}}\\n    </option>\\n</select>\\n<select name=\\\"alertType\\\" [(ngModel)]=\\\"action.switchstatus\\\">\\n    <option disabled value=\\\"false\\\">Wähle einen Status</option>\\n    <option value=\\\"1\\\">Einschalten</option>\\n    <option value=\\\"0\\\">Ausschalten</option>\\n    <option value=\\\"toggle\\\">Umschalten</option>\\n</select>\";","export default \"Den Raum\\n<select [(ngModel)]=\\\"action.action\\\">\\n    <option disabled value=\\\"false\\\">Wähle einen Raum</option>\\n    <option *ngFor=\\\"let room of devices | ObjNgFor\\\" [ngValue]=\\\"room\\\">\\n        {{room.room.name}}\\n    </option>\\n</select>\\n<select name=\\\"alertType\\\" [(ngModel)]=\\\"action.switchstatus\\\">\\n    <option disabled value=\\\"false\\\">Wähle einen Status</option>\\n    <option value=\\\"1\\\">Einschalten</option>\\n    <option value=\\\"0\\\">Ausschalten</option>\\n    <option value=\\\"toggle\\\">Umschalten</option>\\n</select>\";","export default \"<div class=\\\"card mb-3\\\">\\n    <div class=\\\"card-header\\\">\\n        <input [(ngModel)]=\\\"timer.name\\\" class=\\\"form-control\\\" placeholder=\\\"Name\\\">\\n    </div>\\n    <div class=\\\"card-block\\\">\\n        <div class=\\\"card\\\">\\n            <div class=\\\"card-header\\\">\\n                Variablen/Events\\n            </div>\\n            <ul class=\\\"list-group list-group-flush\\\">\\n                <li *ngIf=\\\"!timer.variables != false\\\" class=\\\"list-group-item list-group-item-info\\\">\\n                    Noch keine Variable hinzugefügt!\\n                </li>\\n                <div *ngFor=\\\"let variable of timer.variables | ObjNgFor\\\">\\n                    <div *ngFor=\\\"let variab of variable; index as i;\\\">\\n                        <li class=\\\"list-group-item d-flex justify-content-start\\\">\\n                            Löse aus sobald die Variable \\n                            <i class=\\\"ml-auto material-icons\\\" title=\\\"Variable entfernen\\\" (click)=\\\"removeVariable(variab.id, i)\\\">delete</i>\\n                            <select name=\\\"variable\\\" [(ngModel)]=\\\"variab.id\\\" class=\\\"form-control\\\">\\n                                <option *ngFor=\\\"let type of variables | ObjNgFor\\\" [ngValue]=\\\"type.id\\\">{{type.name}}({{type.id}})</option>\\n                            </select>\\n                            <select name=\\\"variableMode\\\" [(ngModel)]=\\\"variab.mode\\\" class=\\\"form-control\\\">\\n                                <option *ngFor=\\\"let mode of variableModes\\\" [ngValue]=\\\"mode.value\\\">{{mode.name}}</option>\\n                            </select>\\n                            <input *ngIf=\\\"variab.mode != 'onChange'\\\" type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"variab.value\\\">\\n                        </li>\\n                    </div>\\n                </div>\\n                <li class=\\\"list-group-item\\\">\\n                    <form class=\\\"form-inline\\\">\\n                        <select name=\\\"addVariableType\\\" [(ngModel)]=\\\"addVariableType\\\" class=\\\"form-control mr-sm-2\\\">\\n                            <option value=\\\"false\\\" disabled>Wähle eine Variable</option>\\n                            <option *ngFor=\\\"let type of variables | ObjNgFor\\\" [ngValue]=\\\"type.id\\\">{{type.name}}({{type.id}})</option>\\n                        </select>\\n                        <button class=\\\"btn btn-success\\\" (click)=\\\"addVariable(addVariableType)\\\">\\n                            Hinzufügen\\n                        </button>\\n                    </form>\\n                </li>\\n            </ul>\\n        </div> \\n        <br>\\n        <div class=\\\"card\\\">\\n            <div class=\\\"card-header\\\">\\n                Bedingungen\\n            </div>\\n            <ul class=\\\"list-group list-group-flush\\\">\\n                <li *ngIf=\\\"timer.conditions.length == 0\\\" class=\\\"list-group-item list-group-item-info\\\">\\n                    Noch keine Bedingungen hinzugefügt!\\n                </li>\\n                <div *ngIf=\\\"!timer.conditions == false\\\">\\n                    <li class=\\\"list-group-item d-flex justify-content-start\\\" *ngFor=\\\"let con of timer.conditions; index as i;\\\" [ngSwitch]=\\\"con.type\\\">\\n                        <div *ngSwitchCase=\\\"'random'\\\" class=\\\"d-flex\\\">\\n                            Zufällig zwischen <timepicker [(ngModel)]=\\\"con.start\\\" [showMeridian]=\\\"false\\\" [showSpinners]=\\\"false\\\"></timepicker> und <timepicker [(ngModel)]=\\\"con.stop\\\" [showMeridian]=\\\"false\\\" [showSpinners]=\\\"false\\\"></timepicker>\\n                        </div>\\n                        <!-- <TimerConditionVariable *ngSwitchCase=\\\"'variable'\\\"></TimerConditionVariable> -->\\n                        <!-- <app-timer-condition-variable *ngSwitchCase=\\\"'variable'\\\"></app-timer-condition-variable> -->\\n                        <div *ngSwitchCase=\\\"'variable'\\\" class=\\\"\\\">\\n                            Wenn die Variable\\n                            <select name=\\\"variable\\\" [(ngModel)]=\\\"con.id\\\" class=\\\"form-control\\\">\\n                                <option *ngFor=\\\"let type of variables | ObjNgFor\\\" [ngValue]=\\\"type.id\\\">{{type.name}}({{type.id}})</option>\\n                            </select>\\n                            <select name=\\\"variableMode\\\" [(ngModel)]=\\\"con.mode\\\" class=\\\"form-control\\\">\\n                                <option *ngFor=\\\"let mode of variableModes\\\" [ngValue]=\\\"mode.value\\\">{{mode.name}}</option>\\n                            </select>\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"con.value\\\">\\n                        </div>\\n                        <div *ngSwitchCase=\\\"'time'\\\" class=\\\"d-flex\\\">\\n                            Um <timepicker [(ngModel)]=\\\"con.time\\\" [showMeridian]=\\\"false\\\" [showSpinners]=\\\"false\\\"></timepicker>\\n                        </div>\\n                        <div *ngSwitchCase=\\\"'sun'\\\" class=\\\"d-flex\\\">\\n                            <select name=\\\"con.sun\\\" [(ngModel)]=\\\"con.sun\\\" class=\\\"form-control\\\">\\n                                <option value=\\\"sunrise\\\">Sonnenaufgang</option>\\n                                <option value=\\\"sunset\\\">Sonnenuntergang</option>\\n                            </select>\\n                            <!--\\n\\n                                <ng-template #popContent>\\n                                    <div class=\\\"form-check\\\">\\n                                    <label class=\\\"form-check-label\\\">\\n                                        <input class=\\\"form-check-input\\\" [(ngModel)]=\\\"con.offset.active\\\" type=\\\"checkbox\\\">\\n                                        Zeitverschiebung nach\\n                                    </label>\\n                                </div>\\n                                <div *ngIf=\\\"con.offset.active\\\">\\n                                    <div class=\\\"btn-group\\\" ngbRadioGroup name=\\\"radioBasic\\\" [(ngModel)]=\\\"con.offset.random\\\">\\n                                        <label ngbButtonLabel class=\\\"btn-sm btn-secondary\\\">\\n                                            <input ngbButton type=\\\"radio\\\" [value]=\\\"true\\\">Zufall\\n                                        </label>\\n                                        <label ngbButtonLabel class=\\\"btn-sm btn-secondary\\\">\\n                                            <input ngbButton type=\\\"radio\\\" [value]=\\\"false\\\">fest Vorgegeben\\n                                        </label>\\n                                    </div>\\n                                    {{con.offset|json}}\\n                                    <div class=\\\"btn-group\\\" [(ngModel)]=\\\"con.offset.after\\\">\\n                                        <label ngbButtonLabel class=\\\"btn btn-sm btn-secondary\\\" [(ngModel)]=\\\"con.offset.after\\\" [class.active]=\\\"con.offset.after == 'true'\\\">\\n                                            <input name=\\\"after\\\" type=\\\"radio\\\" [value]=\\\"true\\\">hinten\\n                                        </label>\\n                                        <label ngbButtonLabel class=\\\"btn btn-sm btn-secondary\\\" [(ngModel)]=\\\"con.offset.after\\\" [class.active]=\\\"con.offset.after == 'false'\\\">\\n                                            <input name=\\\"after\\\" type=\\\"radio\\\" [value]=\\\"false\\\">vorne\\n                                        </label>\\n                                    </div>\\n                                    <div class=\\\"form-group\\\" *ngIf=\\\"con.offset.random\\\">\\n                                        <label for=\\\"formGroupExampleInput2\\\">Minimale Zeitverschiebung:</label>\\n                                        <input type=\\\"number\\\" class=\\\"form-control\\\" min=\\\"0\\\" max=\\\"{{con.offset.max - 1}}\\\" [(ngModel)]=\\\"con.offset.min\\\" id=\\\"formGroupExampleInput2\\\" placeholder=\\\"1\\\">\\n                                    </div>\\n                                    <div class=\\\"form-group\\\" *ngIf=\\\"con.offset.random\\\">\\n                                        <label for=\\\"formGroupExampleInput2\\\">Maximale Zeitverschiebung:</label>\\n                                        <input type=\\\"number\\\" class=\\\"form-control\\\" min=\\\"{{con.offset.min + 1}}\\\" [(ngModel)]=\\\"con.offset.max\\\" id=\\\"formGroupExampleInput2\\\" placeholder=\\\"18\\\">\\n                                    </div>\\n                                    <div class=\\\"form-group\\\" *ngIf=\\\"!con.offset.random\\\">\\n                                        <label for=\\\"formGroupExampleInput2\\\">Minuten:</label>\\n                                        <input type=\\\"number\\\" class=\\\"form-control\\\" min=\\\"0\\\" [(ngModel)]=\\\"con.offset.minutes\\\" id=\\\"formGroupExampleInput2\\\" placeholder=\\\"18\\\">\\n                                    </div>\\n                                </div>\\n                            </ng-template>\\n                            <i class=\\\"material-icons\\\" [outsideClick]=\\\"true\\\" [popover]=\\\"popContent\\\" placement=\\\"auto\\\" popoverTitle=\\\"Einstellungen\\\">more_vert</i>\\n                        -->\\n\\n                            <ng-template #popContent>\\n                                    <div class=\\\"form-check\\\">\\n                                        <label class=\\\"form-check-label  mb-3\\\">\\n                                            <input class=\\\"form-check-input\\\" [(ngModel)]=\\\"con.offset.active\\\" type=\\\"checkbox\\\">\\n                                            Zeitverschiebung nach\\n                                        </label>\\n                                    </div>\\n                                    <div *ngIf=\\\"con.offset.active\\\">\\n                                        <div class=\\\"btn-group btn-group-sm mr-3\\\">\\n                                            <label class=\\\"btn btn-secondary\\\" [ngClass]=\\\"{active: con.offset.after}\\\">\\n                                                <input type=\\\"radio\\\" [(ngModel)]=\\\"con.offset.after\\\" name=\\\"after\\\" class=\\\"custom-control-input\\\" [value]=\\\"true\\\">\\n                                                hinten\\n                                            </label>\\n                                            <label class=\\\"btn btn-secondary\\\" [ngClass]=\\\"{active: !con.offset.after}\\\">\\n                                                <input type=\\\"radio\\\" [(ngModel)]=\\\"con.offset.after\\\" name=\\\"after\\\" class=\\\"custom-control-input\\\" [value]=\\\"false\\\">\\n                                                vorne\\n                                            </label>\\n                                        </div>\\n                                        <div class=\\\"btn-group btn-group-sm mr-3\\\">\\n                                            <label class=\\\"btn btn-secondary\\\" [ngClass]=\\\"{active: con.offset.random}\\\">\\n                                                <input type=\\\"radio\\\" [(ngModel)]=\\\"con.offset.random\\\" name=\\\"random\\\" class=\\\"custom-control-input\\\" [value]=\\\"true\\\">\\n                                                zufällig\\n                                            </label>\\n                                            <label class=\\\"btn btn-secondary\\\" [ngClass]=\\\"{active: !con.offset.random}\\\">\\n                                                <input type=\\\"radio\\\" [(ngModel)]=\\\"con.offset.random\\\" name=\\\"random\\\" class=\\\"custom-control-input\\\" [value]=\\\"false\\\">\\n                                                fest vorgegeben\\n                                            </label>\\n                                        </div>\\n                                        <div class=\\\"form-group\\\" *ngIf=\\\"con.offset.random\\\">\\n                                            <label for=\\\"formGroupExampleInput2\\\">Minimale Zeitverschiebung:</label>\\n                                            <input type=\\\"number\\\" class=\\\"form-control\\\" min=\\\"0\\\" max=\\\"{{con.offset.max - 1}}\\\" [(ngModel)]=\\\"con.offset.min\\\" id=\\\"formGroupExampleInput2\\\" placeholder=\\\"1\\\">\\n                                        </div>\\n                                        <div class=\\\"form-group\\\" *ngIf=\\\"con.offset.random\\\">\\n                                            <label for=\\\"formGroupExampleInput2\\\">Maximale Zeitverschiebung:</label>\\n                                            <input type=\\\"number\\\" class=\\\"form-control\\\" min=\\\"{{con.offset.min + 1}}\\\" [(ngModel)]=\\\"con.offset.max\\\" id=\\\"formGroupExampleInput2\\\" placeholder=\\\"18\\\">\\n                                        </div>\\n                                        <div class=\\\"form-group\\\" *ngIf=\\\"!con.offset.random\\\">\\n                                            <label for=\\\"formGroupExampleInput2\\\">Minuten:</label>\\n                                            <input type=\\\"number\\\" class=\\\"form-control\\\" min=\\\"0\\\" [(ngModel)]=\\\"con.offset.minutes\\\" id=\\\"formGroupExampleInput2\\\" placeholder=\\\"18\\\">\\n                                        </div>\\n                                    </div>\\n                                </ng-template>\\n                                <i class=\\\"material-icons\\\" [popover]=\\\"popContent\\\" [outsideClick]=\\\"true\\\" placement=\\\"left\\\" popoverTitle=\\\"Einstellungen\\\" [popoverContext]=\\\"con\\\">more_vert</i>\\n                        </div> \\n                        <div *ngSwitchCase=\\\"'range'\\\"  class=\\\"d-flex\\\" title=\\\"Zeitverschiebung\\\">\\n                            Von <timepicker [(ngModel)]=\\\"con.start\\\" [showMeridian]=\\\"false\\\" [showSpinners]=\\\"false\\\"></timepicker> bis <timepicker [(ngModel)]=\\\"con.stop\\\" [showMeridian]=\\\"false\\\" [showSpinners]=\\\"false\\\"></timepicker>\\n                        </div>\\n                        <div *ngSwitchCase=\\\"'weekdays'\\\" class=\\\"d-flex\\\">\\n                            <div class=\\\"btn-group\\\" data-toggle=\\\"buttons\\\">\\n                                <label class=\\\"btn btn-secondary\\\" ngbButtonLabel [class.active]=\\\"con.weekdays['1']\\\">\\n                                    <input type=\\\"checkbox\\\" hidden ngbButton [(ngModel)]=\\\"con.weekdays['1']\\\">Montag\\n                                </label>\\n                                <label class=\\\"btn btn-secondary\\\" ngbButtonLabel [class.active]=\\\"con.weekdays['2']\\\">\\n                                    <input type=\\\"checkbox\\\" hidden ngbButton [(ngModel)]=\\\"con.weekdays['2']\\\">Dienstag\\n                                </label>\\n                                <label class=\\\"btn btn-secondary\\\" ngbButtonLabel [class.active]=\\\"con.weekdays['3']\\\">\\n                                    <input type=\\\"checkbox\\\" hidden ngbButton [(ngModel)]=\\\"con.weekdays['3']\\\">Mittwoch\\n                                </label>\\n                                <label class=\\\"btn btn-secondary\\\" ngbButtonLabel [class.active]=\\\"con.weekdays['4']\\\">\\n                                    <input type=\\\"checkbox\\\" hidden ngbButton [(ngModel)]=\\\"con.weekdays['4']\\\">Donnerstag\\n                                </label>\\n                                <label class=\\\"btn btn-secondary\\\" ngbButtonLabel [class.active]=\\\"con.weekdays['5']\\\">\\n                                    <input type=\\\"checkbox\\\" hidden ngbButton [(ngModel)]=\\\"con.weekdays['5']\\\">Freitag\\n                                </label>\\n                                <label class=\\\"btn btn-secondary\\\" ngbButtonLabel [class.active]=\\\"con.weekdays['6']\\\">\\n                                    <input type=\\\"checkbox\\\" hidden ngbButton [(ngModel)]=\\\"con.weekdays['6']\\\">Samstag\\n                                </label>\\n                                <label class=\\\"btn btn-secondary\\\" ngbButtonLabel [class.active]=\\\"con.weekdays['0']\\\">\\n                                    <input type=\\\"checkbox\\\" hidden ngbButton [(ngModel)]=\\\"con.weekdays['0']\\\">Sonntag\\n                                </label>\\n                            </div>\\n                        </div>\\n                        <div *ngSwitchDefault>{{con | json}}</div>\\n                        <i class=\\\"ml-auto material-icons\\\" title =\\\"Bedingung entfernen\\\" (click)=\\\"removeCondition(i)\\\">delete</i>\\n                    </li>\\n                </div>\\n                <li class=\\\"list-group-item\\\">\\n                    <form class=\\\"form-inline\\\">\\n                        <select name=\\\"addConditionType\\\" [(ngModel)]=\\\"addConditionType\\\" class=\\\"form-control mr-sm-2\\\">\\n                            <option value=\\\"false\\\" disabled>Wähle eine Bedingung</option>\\n                            <option *ngFor=\\\"let type of conditions\\\" [ngValue]=\\\"type.value\\\">{{type.name}}</option>\\n                        </select>\\n                        <button class=\\\"btn btn-success\\\" (click)=\\\"addCondition(addConditionType)\\\">\\n                            Hinzufügen\\n                        </button>\\n                    </form>\\n                </li>\\n            </ul>\\n        </div>\\n        <br>\\n        <div class=\\\"card\\\">\\n            <div class=\\\"card-header d-flex justify-content-between\\\">\\n                Aktionen\\n                <i (click)='switchAll(\\\"timers\\\", timer)' *ngIf=\\\"timer.id\\\" title=\\\"Aktionen zum testen jetzt ausführen!\\\" class=\\\"material-icons\\\">play_circle_outline</i>\\n            </div>\\n            <ul class=\\\"list-group list-group-flush\\\">\\n                <li *ngIf=\\\"timer.actions.length == 0\\\" class=\\\"list-group-item list-group-item-info\\\">\\n                        Noch keine Aktionen hinzugefügt!\\n                </li>\\n                <li class=\\\"list-group-item d-flex justify-content-start\\\" *ngFor=\\\"let act of  timer.actions; index as i;\\\" [ngSwitch]=\\\"act.type\\\">\\n                        <app-timer-device *ngSwitchCase=\\\"'device'\\\" [action]=\\\"act\\\"></app-timer-device>\\n                        <app-timer-group *ngSwitchCase=\\\"'group'\\\" [action]=\\\"act\\\"></app-timer-group>\\n                        <app-timer-alert *ngSwitchCase=\\\"'alert'\\\" [action]=\\\"act\\\"></app-timer-alert>\\n                        <app-timer-room *ngSwitchCase=\\\"'room'\\\" [action]=\\\"act\\\"></app-timer-room>\\n                        <!-- <app-timer-pushbullet *ngSwitchCase=\\\"'pushbullets'\\\" [action]=\\\"act\\\"></app-timer-pushbullet> -->\\n                        <div *ngSwitchCase=\\\"'setVariable'\\\">\\n                            <select name=\\\"variable\\\" [(ngModel)]=\\\"act.action\\\" class=\\\"form-control\\\">\\n                                <option *ngFor=\\\"let type of variables | ObjNgFor\\\" [ngValue]=\\\"type\\\">{{type.name}}({{type.id}})</option>\\n                            </select>\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"act.action.status\\\">\\n                        </div>\\n                        <div *ngSwitchCase=\\\"'url'\\\" class=\\\"w-50\\\">Url: <input class=\\\"w-75\\\" type=\\\"text\\\" [(ngModel)]=\\\"act.action.url\\\" placeholger=\\\"http://ifttt.de\\\"></div>\\n                        <div  *ngSwitchDefault>{{act.type}}:{{act | json}}</div>\\n                        <div class=\\\"ml-auto d-flex\\\">\\n                            <div class=\\\"form-check\\\" style=\\\"margin-top: auto;\\\">\\n                                Interval: <input class=\\\"\\\" [(ngModel)]=\\\"act.activeInterval\\\" type=\\\"checkbox\\\">\\n                            </div>\\n                            <input type=\\\"number\\\" [(ngModel)]=\\\"act.number\\\" *ngIf=\\\"act.activeInterval\\\">\\n                            <select [(ngModel)]=\\\"act.unit\\\" *ngIf=\\\"act.activeInterval\\\">\\n                                <option value=\\\"sec\\\">Sekunden</option>\\n                                <option value=\\\"min\\\">Minuten</option>\\n                                <option value=\\\"hour\\\">Stunden</option>\\n                                <option value=\\\"day\\\">Tag</option>\\n                                <option value=\\\"day of the week\\\">Tag der Woche</option>\\n                                <option value=\\\"day of the month\\\">Tag des Monats</option>\\n                            </select>\\n                            <ng-template #popContent>\\n                                <div class=\\\"form-check\\\">\\n                                    <label class=\\\"form-check-label  mb-3\\\">\\n                                        <input class=\\\"form-check-input\\\" [(ngModel)]=\\\"act.offset.active\\\" type=\\\"checkbox\\\">\\n                                        Zeitverschiebung nach\\n                                    </label>\\n                                </div>\\n                                <div *ngIf=\\\"act.offset.active\\\">\\n                                    <div class=\\\"btn-group btn-group-sm mr-3\\\">\\n                                        <label class=\\\"btn btn-secondary\\\" [ngClass]=\\\"{active: act.offset.after}\\\">\\n                                            <input type=\\\"radio\\\" [(ngModel)]=\\\"act.offset.after\\\" name=\\\"after\\\" class=\\\"custom-control-input\\\" [value]=\\\"true\\\">\\n                                            hinten\\n                                        </label>\\n                                        <label class=\\\"btn btn-secondary\\\" [ngClass]=\\\"{active: !act.offset.after}\\\">\\n                                            <input type=\\\"radio\\\" [(ngModel)]=\\\"act.offset.after\\\" name=\\\"after\\\" class=\\\"custom-control-input\\\" [value]=\\\"false\\\">\\n                                            vorne\\n                                        </label>\\n                                    </div>\\n                                    <div class=\\\"btn-group btn-group-sm mr-3\\\">\\n                                        <label class=\\\"btn btn-secondary\\\" [ngClass]=\\\"{active: act.offset.random}\\\">\\n                                            <input type=\\\"radio\\\" [(ngModel)]=\\\"act.offset.random\\\" name=\\\"random\\\" class=\\\"custom-control-input\\\" [value]=\\\"true\\\">\\n                                            zufällig\\n                                        </label>\\n                                        <label class=\\\"btn btn-secondary\\\" [ngClass]=\\\"{active: !act.offset.random}\\\">\\n                                            <input type=\\\"radio\\\" [(ngModel)]=\\\"act.offset.random\\\" name=\\\"random\\\" class=\\\"custom-control-input\\\" [value]=\\\"false\\\">\\n                                            fest vorgegeben\\n                                        </label>\\n                                    </div>\\n                                    <div class=\\\"form-group\\\" *ngIf=\\\"act.offset.random\\\">\\n                                        <label for=\\\"formGroupExampleInput2\\\">Minimale Zeitverschiebung:</label>\\n                                        <input type=\\\"number\\\" class=\\\"form-control\\\" min=\\\"0\\\" max=\\\"{{act.offset.max - 1}}\\\" [(ngModel)]=\\\"act.offset.min\\\" id=\\\"formGroupExampleInput2\\\" placeholder=\\\"1\\\">\\n                                    </div>\\n                                    <div class=\\\"form-group\\\" *ngIf=\\\"act.offset.random\\\">\\n                                        <label for=\\\"formGroupExampleInput2\\\">Maximale Zeitverschiebung:</label>\\n                                        <input type=\\\"number\\\" class=\\\"form-control\\\" min=\\\"{{act.offset.min + 1}}\\\" [(ngModel)]=\\\"act.offset.max\\\" id=\\\"formGroupExampleInput2\\\" placeholder=\\\"18\\\">\\n                                    </div>\\n                                    <div class=\\\"form-group\\\" *ngIf=\\\"!act.offset.random\\\">\\n                                        <label for=\\\"formGroupExampleInput2\\\">Minuten:</label>\\n                                        <input type=\\\"number\\\" class=\\\"form-control\\\" min=\\\"0\\\" [(ngModel)]=\\\"act.offset.minutes\\\" id=\\\"formGroupExampleInput2\\\" placeholder=\\\"18\\\">\\n                                    </div>\\n                                </div>\\n                            </ng-template>\\n                            <i class=\\\"material-icons\\\" [popover]=\\\"popContent\\\" [outsideClick]=\\\"true\\\" placement=\\\"left\\\" popoverTitle=\\\"Einstellungen\\\" [popoverContext]=\\\"act\\\">more_vert</i>\\n                            <i class=\\\"material-icons\\\" title=\\\"Aktion entfernen\\\" (click)=\\\"removeAction(i)\\\">delete</i>\\n                        </div>\\n                </li>\\n                <li class=\\\"list-group-item\\\">\\n                    <form class=\\\"form-inline\\\">\\n                        <select class=\\\"form-control mr-sm-2\\\" name=\\\"addActionType\\\" [(ngModel)]=\\\"addActionType\\\">\\n                            <option disabled value=\\\"false\\\">Action auswählen</option>\\n                            <option *ngFor=\\\"let action of actions\\\" [ngValue]=\\\"action.value\\\">{{action.name}}</option>\\n                        </select>\\n                        <button class=\\\"btn btn-success\\\" (click)=\\\"addAction(addActionType)\\\">\\n                            Hinzufügen\\n                        </button>\\n                    </form>\\n                </li>\\n            </ul>\\n        </div>\\n        <br>\\n        <div class=\\\"right\\\">\\n            <button class=\\\"btn btn-success\\\" (click)=\\\"save()\\\">Speichern</button>\\n            <button class=\\\"btn btn-danger\\\" (click)=\\\"cancel()\\\">Abbrechen</button>\\n        </div>\\n    </div>\\n</div>\";","export default \".red{\\n    background:red;\\n    border-radius: 40px;\\n    width:40px;\\n    height: 40px;\\n    border-radius: 50px/50px;\\n    border:none;\\n    margin-left:5px;\\n}\\n\\n.material-icons {\\n    margin-top: auto;\\n}\\n\\n.points{\\n    position:relative;\\n    top: 6px;\\n    left: 6px;\\n    color:white;\\n}\\n\\n.right{\\n    text-align: right;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdGltZXItZWRpdC90aW1lci1lZGl0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxjQUFjO0lBQ2QsbUJBQW1CO0lBQ25CLFVBQVU7SUFDVixZQUFZO0lBR1osd0JBQXdCO0lBQ3hCLFdBQVc7SUFDWCxlQUFlO0FBQ25COztBQUVBO0lBQ0ksZ0JBQWdCO0FBQ3BCOztBQUVBO0lBQ0ksaUJBQWlCO0lBQ2pCLFFBQVE7SUFDUixTQUFTO0lBQ1QsV0FBVztBQUNmOztBQUVBO0lBQ0ksaUJBQWlCO0FBQ3JCIiwiZmlsZSI6InNyYy9hcHAvdGltZXItZWRpdC90aW1lci1lZGl0LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIucmVke1xuICAgIGJhY2tncm91bmQ6cmVkO1xuICAgIGJvcmRlci1yYWRpdXM6IDQwcHg7XG4gICAgd2lkdGg6NDBweDtcbiAgICBoZWlnaHQ6IDQwcHg7XG4gICAgLW1vei1ib3JkZXItcmFkaXVzOiA1MHB4LzUwcHg7XG4gICAgLXdlYmtpdC1ib3JkZXItcmFkaXVzOiA1MHB4IDUwcHg7XG4gICAgYm9yZGVyLXJhZGl1czogNTBweC81MHB4O1xuICAgIGJvcmRlcjpub25lO1xuICAgIG1hcmdpbi1sZWZ0OjVweDtcbn1cblxuLm1hdGVyaWFsLWljb25zIHtcbiAgICBtYXJnaW4tdG9wOiBhdXRvO1xufVxuXG4ucG9pbnRze1xuICAgIHBvc2l0aW9uOnJlbGF0aXZlO1xuICAgIHRvcDogNnB4O1xuICAgIGxlZnQ6IDZweDtcbiAgICBjb2xvcjp3aGl0ZTtcbn1cblxuLnJpZ2h0e1xuICAgIHRleHQtYWxpZ246IHJpZ2h0O1xufSJdfQ== */\";","import { Component, OnInit, Input } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\n\nimport { GlobalObjectsService } from \"../app.service.global\";\nimport { SocketService } from \"../app.service\";\n\n@Component({\n  selector: 'app-timer-edit',\n  templateUrl: './timer-edit.component.html',\n  styleUrls: ['./timer-edit.component.css']\n})\nexport class TimerEditComponent implements OnInit {\n\n    constructor(\n        private route: ActivatedRoute,\n        private router: Router,\n        public globalVar: GlobalObjectsService,\n        private socket: SocketService){}\n        \n    actions = [\n        {value:\"device\", name:\"Gerät\"},\n        {value:\"group\", name:\"Gruppe\"},\n        {value:\"room\", name:\"Raum\"},\n        {value:\"alert\", name:\"Alert\"},\n        {value:\"url\", name:\"Url aufrufen\"},\n        {value:\"setVariable\", name:\"Variablen Wert setzen\"},\n\t\t{value:\"pushbullets\", name:\"Pushbulletbenachrichigung\"}\n    ]\n    id:number;\n    timer:Timer;\n    \n    addActionType = \"false\";\n    addVariableType = \"false\";\n    addConditionType = \"false\";\n    variables: Array<object>;\n    ngOnInit() {\n        this.id = parseInt(this.route.snapshot.paramMap.get('id')) || undefined;\n        if(this.id){\n            this.socket.emit(\"timers:get\", {\"get\":this.id});\n            this.socket.on('timer', data => {\n                console.log(data);\n                if(this.id === parseInt(data[data.type].id)){\n                    this.timer = data[data.type];\n                }\n            });\n        }else{\n            this.timer = {\n                name:\"\",\n                id:undefined,\n                variables: false,\n                conditions:[],\n                actions:[],\n                user: this.globalVar.activeUser.name\n            }\n        }\n        this.socket.emit(\"variables:get\", \"\");\n        this.socket.on(\"variables\", data => {\n            if(data.type == \"get\"){\n                this.variables = data.get;\n            }\n        });\n    }\n\n    addAction(type){\n        if(type  != \"false\"){\n            if(!this.timer.actions){\n                this.timer.actions = [];\n            }\n            this.timer.actions.push({\n                type: type,\n                activeInterval: false,\n                unit: \"min\",\n                number: 5,\n                switchstatus: false,\n                action: {},\n                offset:{\n                    active:false,\n                    random: false,\n                    after:true,\n                    min:2,\n                    max:5,\n                    minutes:4\n                }\n            });\n        }\n    }\n    addVariable(id){\n        if(id != \"false\"){\n            if(!this.timer.variables){\n                this.timer.variables = {};\n            }\n            if(!this.timer.variables[id]){\n                this.timer.variables[id] = [];\n            }\n            this.timer.variables[id].push({\n                id:id,\n                mode:\"onChange\"\n            });\n        }\n    }\n    addCondition(type){\n        if(type != \"false\"){\n            if(!this.timer.conditions){\n                this.timer.conditions = [];\n            }\n            this.timer.conditions.push({\n                type:type,\n                offset:{\n                    active:false,\n                    random: false,\n                    after:true,\n                    min:2,\n                    max:5,\n                    minutes:4\n                },\n                weekdays:[false,false,false,false,false,false,false]\n            });\n        }\n    }\n    removeAction(index){\n        this.timer.actions.splice(index, 1);\n    }\n    removeCondition(index){\n        this.timer.conditions.splice(index, 1);\n    }\n    removeVariable(id, index){\n        this.timer.variables[id].splice(index, 1);\n        if(this.timer.variables[id].length == 0){\n            delete this.timer.variables[id];\n        }\n        for(let index in this.timer.variables){\n            if (this.timer.variables.hasOwnProperty(index)) {\n                return;\n            }\n        }\n        this.timer.variables = false;\n    }\n    save(){\n        console.log(this.timer);\n        this.socket.emit('timers:save', {user:this.globalVar.activeUser, save: this.timer});\n        this.router.navigate(['/timers']);\n    }\n    cancel(){\n        this.router.navigate(['/timers']);\n    }\n\n\tswitchAll = function(type, data){\n\t\tthis.socket.emit(type + ':switchAll', {user:this.globalVar.activeUser, switchAll: data});\t\n\t}\n    variableModes = [\n        {value:\"match\", name:\"match (deprected)\"},\n        {value:\"onChange\", name:\"sich ändert (onChange)\"},\n        {value:\"größer\", name:\"größer als\"},\n        {value:\"kleiner\", name:\"kleiner als\"},\n        {value:\"gleich\", name:\"gleich\"},\n        {value:\"ungleich\", name:\"ungleich\"},\n        {value:\"kleinergleich\", name:\"kleiner oder gleich\"},\n        {value:\"größergleich\", name:\"größer oder gleich\"}\n    ]\n    conditions = [\n        {value:\"range\", name:\"Zeitraum\"},\n        {value:\"sun\", name:\"Sonnenaufgang/Untergang\"},\n        {value:\"random\", name:\"Zufälliger Zeitpunkt in einem Zeitraum\"},\n        {value:\"variable\", name:\"Wert einer Variable\"},\n        {value:\"time\", name:\"Zeit\"},\n        {value:\"weekdays\", name:\"Wochentage\"}\n    ]\n}\n\n\n@Component({\n    selector: 'app-timer-group',\n    styleUrls: ['./timer-edit.component.css'],\n    templateUrl: './templates/action-group.html'\n})\nexport class TimerGroupComponent{\n    @Input() action: any;\n    constructor(\n        private socket: SocketService,\n        public globalVar: GlobalObjectsService\n    ){}\n    groups = {};\n    ngOnInit(){\n        this.socket.emit(\"groups:getAll\", \"\");\n        this.socket.on(\"groups\", data => {\n            this.groups = data.get;\n            if(this.action.action.id && this.action.action != this.groups[this.action.action.id]){\n                this.action.action = this.groups[this.action.action.id];\n            }\n        });\n    }\n}\n\n\n@Component({\n  selector: 'app-timer-device',\n  styleUrls: ['./timer-edit.component.css'],\n  templateUrl: './templates/action-device.html'\n})\nexport class TimerDeviceComponent {\n    @Input() action: any;\n    devicelist:Array<object>;\n    constructor(\n        private socket: SocketService\n    ){}\n    ngOnInit(){\n        this.socket.emit(\"devices:devicelist\", \"\");\n        this.socket.on(\"devicelist\", data => {\n            this.devicelist = data.get;\n            if(this.action.action.deviceid && this.action.action != this.devicelist[this.action.action.deviceid]){\n                this.action.action = this.devicelist[this.action.action.deviceid];\n            }\n        });\n    }\n}\n\n@Component({\n  selector: 'app-timer-alert',\n  styleUrls: ['./timer-edit.component.css'],\n  templateUrl: './templates/action-alert.html'\n})\nexport class TimerAlertComponent {\n    @Input() action: any;\n    constructor(\n        private socket: SocketService,\n        public globalVar: GlobalObjectsService\n    ){}\n    alertTypen = [\n        {value:'primary', name:'Blau/Primary'},\n        {value:'info', name:'Hellblau/Info'},\n        {value:'success', name:'Grün/Success'},\n        {value:'warning', name:'Gelb/Warning'},\n        {value:'danger', name:'Rot/Danger'},\n        {value:'secondary', name:'Weiß/Default'}\n    ]\n}\n\n// @Component({\n//   selector: 'app-timer-pushbullet',\n//   styleUrls: ['./timer-edit.component.css'],\n//   templateUrl: './templates/action-pushbullet.html'\n// })\n// export class TimerPushbulletComponent {\n//     @Input() action: any;\n//     constructor(\n//         private socket: SocketService,\n//         public globalVar: GlobalObjectsService\n//     ){}\n// }\n\n\n@Component({\n    selector: 'app-timer-room',\n    styleUrls: ['./timer-edit.component.css'],\n    templateUrl: './templates/action-room.html'\n})\nexport class TimerRoomComponent{\n    @Input() action: any;\n    constructor(\n        private socket: SocketService,\n        public globalVar: GlobalObjectsService\n    ){}\n    devices = {};\n    ngOnInit(){\n        this.socket.emit(\"devices:get\", \"\");\n        this.socket.on(\"devices\", data => {\n            this.devices = data.get;\n            if(this.action.action.id && this.action.action != this.devices[this.action.action.id]){\n                this.action.action = this.devices[this.action.action.id];\n            }\n        });\n    }\n}\n\n// @Component({\n//     selector: 'app-timer-condition-variable',\n//     styleUrls: ['./timer-edit.component.css'],\n//     templateUrl: './templates/condition-variable.html'\n// })\n// export class TimerConditionVariableComponent{\n//     @Input() condition: any;\n//     constructor(\n//         private socket: SocketService,\n//         public globalVar: GlobalObjectsService\n//     ){}\n//     devices = {};\n//     variables: Array<object>;\n//     ngOnInit(){\n//     }\n// }","import { RouterModule }             from \"@angular/router\";\nimport { FormsModule,\n         ReactiveFormsModule }      from '@angular/forms';\nimport { NgModule\n         , Component\n         , Pipe\n         , PipeTransform }          from '@angular/core';\nimport { CommonModule }             from \"@angular/common\";\nimport { platformBrowserDynamic }   from \"@angular/platform-browser-dynamic\";\n\nimport { GlobalObjectsService }     from \"../app.service.global\";\nimport { SocketService }            from '../app.service';\n\nimport { TimerEditComponent\n         ,TimerGroupComponent\n         ,TimerDeviceComponent\n         ,TimerAlertComponent\n         ,TimerRoomComponent\n        //  ,TimerPushbulletComponent\n        //  ,TimerConditionVariableComponent\n       }                            from './timer-edit.component';\n// import { NgbModule }                from '@ng-bootstrap/ng-bootstrap';\nimport { ModalModule }              from 'ngx-bootstrap/modal';\nimport { TimepickerModule }         from 'ngx-bootstrap/timepicker';\nimport { PopoverModule }            from 'ngx-bootstrap/popover';\n\n@Pipe({ name: 'ObjNgFor',  pure: false })\nexport class ObjNgFor implements PipeTransform {\n    transform(value: any, args: any[] = null): any {\n      if(value){\n        return Object.keys(value).map(key => value[key]);\n      }\n    }\n}\n\n@NgModule({\n    declarations: [\n         TimerEditComponent\n        ,ObjNgFor\n        ,TimerGroupComponent\n        ,TimerDeviceComponent\n        ,TimerAlertComponent\n        ,TimerRoomComponent\n        // ,TimerPushbulletComponent\n        // ,TimerConditionVariableComponent\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        // Bootstrap\n        ModalModule,\n        TimepickerModule.forRoot(),\n        PopoverModule.forRoot(),\n        \n        RouterModule.forChild([\n            {\n                path: ':id',\n                component: TimerEditComponent\n            },{\n                path: '',\n                component: TimerEditComponent\n            }\n        ])\n    ],\n    exports: [\n         TimerEditComponent\n        ,ObjNgFor\n        ,TimerGroupComponent\n        ,TimerDeviceComponent\n        ,TimerAlertComponent\n        // ,TimerPushbulletComponent\n        ,TimerRoomComponent\n    ],\n    providers: [\n        SocketService\n        ,GlobalObjectsService\n    ],\n    bootstrap: [\n        TimerEditComponent\n    ]\n})\nexport class TimerEditModule {}\n"],"sourceRoot":"webpack:///"}